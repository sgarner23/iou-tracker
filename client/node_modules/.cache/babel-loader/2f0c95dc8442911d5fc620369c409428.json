{"ast":null,"code":"import React,{useContext,useEffect}from\"react\";import{userContext}from\"./store/userStore\";import{Navigate,Routes,Route,useNavigate,useLocation}from\"react-router-dom\";import Login from\"./pages/Login\";import Profile from\"./pages/Profile\";import Invoice from\"./pages/Invoice\";import persistUserLogin from\"./helpers/getDataFromSession\";import\"./App.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useContext=useContext(userContext),state=_useContext.state,dispatch=_useContext.dispatch;var navigate=useNavigate();var location=useLocation();useEffect(function(){if(!state.user){var userInfo=persistUserLogin();dispatch({type:\"USER_LOGGED_IN\",value:userInfo});// if there is no user already stored in state, navigate them to the current pathname of the page they're on\nnavigate(\"\".concat(location.pathname));}},[]);// Routes are protected if user is not signed in and authenticated\nif(!state.user){return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(Login,{})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/login\"})})]})});}return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/profile\",element:/*#__PURE__*/_jsx(Profile,{})}),/*#__PURE__*/_jsx(Route,{path:\"/invoice/:id\",element:/*#__PURE__*/_jsx(Invoice,{})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(Login,{})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/profile\"})})]})});}export default App;","map":{"version":3,"sources":["/Users/therealstephen/personal-projects/iou-tracker-client/src/App.js"],"names":["React","useContext","useEffect","userContext","Navigate","Routes","Route","useNavigate","useLocation","Login","Profile","Invoice","persistUserLogin","App","state","dispatch","navigate","location","user","userInfo","type","value","pathname"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,SAA5B,KAA6C,OAA7C,CACA,OAASC,WAAT,KAA4B,mBAA5B,CACA,OACEC,QADF,CAEEC,MAFF,CAGEC,KAHF,CAIEC,WAJF,CAKEC,WALF,KAMO,kBANP,CAOA,MAAOC,CAAAA,KAAP,KAAkB,eAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,iBAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,iBAApB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,8BAA7B,CAEA,MAAO,WAAP,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CACb,gBAA4BZ,UAAU,CAACE,WAAD,CAAtC,CAAQW,KAAR,aAAQA,KAAR,CAAeC,QAAf,aAAeA,QAAf,CACA,GAAMC,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CACA,GAAMU,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CAEAN,SAAS,CAAC,UAAM,CACd,GAAI,CAACY,KAAK,CAACI,IAAX,CAAiB,CACf,GAAMC,CAAAA,QAAQ,CAAGP,gBAAgB,EAAjC,CACAG,QAAQ,CAAC,CAAEK,IAAI,CAAE,gBAAR,CAA0BC,KAAK,CAAEF,QAAjC,CAAD,CAAR,CACA;AACAH,QAAQ,WAAIC,QAAQ,CAACK,QAAb,EAAR,CACD,CACF,CAPQ,CAON,EAPM,CAAT,CASA;AACA,GAAI,CAACR,KAAK,CAACI,IAAX,CAAiB,CACf,mBACE,KAAC,KAAD,CAAO,QAAP,wBACE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,IAAI,CAAC,QAAZ,CAAqB,OAAO,cAAE,KAAC,KAAD,IAA9B,EADF,cAEE,KAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,CAAgB,OAAO,cAAE,KAAC,QAAD,EAAU,EAAE,CAAC,QAAb,EAAzB,EAFF,GADF,EADF,CAQD,CACD,mBACE,KAAC,KAAD,CAAO,QAAP,wBACE,MAAC,MAAD,yBAEE,KAAC,KAAD,EAAO,IAAI,CAAC,UAAZ,CAAuB,OAAO,cAAE,KAAC,OAAD,IAAhC,EAFF,cAGE,KAAC,KAAD,EAAO,IAAI,CAAC,cAAZ,CAA2B,OAAO,cAAE,KAAC,OAAD,IAApC,EAHF,cAIE,KAAC,KAAD,EAAO,IAAI,CAAC,QAAZ,CAAqB,OAAO,cAAE,KAAC,KAAD,IAA9B,EAJF,cAOE,KAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,CAAgB,OAAO,cAAE,KAAC,QAAD,EAAU,EAAE,CAAC,UAAb,EAAzB,EAPF,GADF,EADF,CAaD,CAED,cAAeL,CAAAA,GAAf","sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport { userContext } from \"./store/userStore\";\nimport {\n  Navigate,\n  Routes,\n  Route,\n  useNavigate,\n  useLocation,\n} from \"react-router-dom\";\nimport Login from \"./pages/Login\";\nimport Profile from \"./pages/Profile\";\nimport Invoice from \"./pages/Invoice\";\nimport persistUserLogin from \"./helpers/getDataFromSession\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const { state, dispatch } = useContext(userContext);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!state.user) {\n      const userInfo = persistUserLogin();\n      dispatch({ type: \"USER_LOGGED_IN\", value: userInfo });\n      // if there is no user already stored in state, navigate them to the current pathname of the page they're on\n      navigate(`${location.pathname}`);\n    }\n  }, []);\n\n  // Routes are protected if user is not signed in and authenticated\n  if (!state.user) {\n    return (\n      <React.Fragment>\n        <Routes>\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"*\" element={<Navigate to=\"/login\" />} />\n        </Routes>\n      </React.Fragment>\n    );\n  }\n  return (\n    <React.Fragment>\n      <Routes>\n        {/* list specific path routes here */}\n        <Route path=\"/profile\" element={<Profile />} />\n        <Route path=\"/invoice/:id\" element={<Invoice />} />\n        <Route path=\"/login\" element={<Login />} />\n\n        {/* catch all route (default to /profile if none of the above paths match) */}\n        <Route path=\"*\" element={<Navigate to=\"/profile\" />} />\n      </Routes>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}