{"ast":null,"code":"var _jsxFileName = \"/Users/therealstephen/personal-projects/iou-tracker/client/src/store/lineItemStore.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  lineItems: [{\n    quantity: \"\",\n    unitPrice: \"\",\n    itemName: \"\",\n    subtotal: \"\"\n  }],\n  selectedLineItems: [{\n    quantity: \"\",\n    unit_price: \"\",\n    item_name: \"\",\n    subtotal: \"\"\n  }]\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"itemName\":\n      {\n        const arrOfLineItems = state.lineItems;\n        arrOfLineItems[action.index].itemName = action.value;\n        return { ...state,\n          lineItems: arrOfLineItems\n        };\n      }\n\n    case \"quantity\":\n      {\n        const arrOfLineItems = state.lineItems;\n        arrOfLineItems[action.index].quantity = action.value;\n        const total = +arrOfLineItems[action.index].quantity * +arrOfLineItems[action.index].unitPrice;\n        arrOfLineItems[action.index].subtotal = total.toFixed(2);\n        return { ...state,\n          arrOfLineItems\n        };\n      }\n\n    case \"unitPrice\":\n      {\n        const arrOfLineItems = state.lineItems;\n        arrOfLineItems[action.index].unitPrice = action.value;\n        const total = +arrOfLineItems[action.index].quantity * +arrOfLineItems[action.index].unitPrice;\n        arrOfLineItems[action.index].subtotal = total.toFixed(2);\n        return { ...state,\n          arrOfLineItems\n        };\n      }\n\n    case \"ADD_NEW_LINE\":\n      {\n        const updatedLineItems = [...state.lineItems, {\n          quantity: \"\",\n          unitPrice: \"\",\n          itemName: \"\",\n          subtotal: \"\"\n        }];\n        return { ...state,\n          lineItems: updatedLineItems\n        };\n      }\n\n    case \"DELETE_LINE\":\n      {\n        const updatedLineItems = [...state.lineItems];\n        updatedLineItems.splice(action.index, 1);\n        return { ...state,\n          lineItems: updatedLineItems\n        };\n      }\n\n    case \"SELECT_LINE_ITEMS\":\n      {\n        return { ...state,\n          selectedLineItems: action.value\n        };\n      }\n\n    case \"RESET\":\n      {\n        return initialState;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const lineItemContext = /*#__PURE__*/createContext(initialState);\nexport const LineItemStore = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [lineItemState, updateLineItem] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(lineItemContext.Provider, {\n    value: {\n      lineItemState,\n      updateLineItem\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LineItemStore, \"WqvrNRnWKrDhzf+SD+hmPKRK7FA=\");\n\n_c = LineItemStore;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineItemStore\");","map":{"version":3,"sources":["/Users/therealstephen/personal-projects/iou-tracker/client/src/store/lineItemStore.js"],"names":["React","createContext","useReducer","initialState","lineItems","quantity","unitPrice","itemName","subtotal","selectedLineItems","unit_price","item_name","reducer","state","action","type","arrOfLineItems","index","value","total","toFixed","updatedLineItems","splice","lineItemContext","LineItemStore","children","lineItemState","updateLineItem"],"mappings":"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","sourcesContent":["import React, { createContext, useReducer } from \"react\";\n\nconst initialState = {\n  lineItems: [\n    {\n      quantity: \"\",\n      unitPrice: \"\",\n      itemName: \"\",\n      subtotal: \"\",\n    },\n  ],\n  selectedLineItems: [\n    {\n      quantity: \"\",\n      unit_price: \"\",\n      item_name: \"\",\n      subtotal: \"\",\n    },\n  ],\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"itemName\": {\n      const arrOfLineItems = state.lineItems;\n      arrOfLineItems[action.index].itemName = action.value;\n      return {\n        ...state,\n        lineItems: arrOfLineItems,\n      };\n    }\n\n    case \"quantity\": {\n      const arrOfLineItems = state.lineItems;\n      arrOfLineItems[action.index].quantity = action.value;\n      const total =\n        +arrOfLineItems[action.index].quantity *\n        +arrOfLineItems[action.index].unitPrice;\n      arrOfLineItems[action.index].subtotal = total.toFixed(2);\n      return {\n        ...state,\n        arrOfLineItems,\n      };\n    }\n\n    case \"unitPrice\": {\n      const arrOfLineItems = state.lineItems;\n      arrOfLineItems[action.index].unitPrice = action.value;\n      const total =\n        +arrOfLineItems[action.index].quantity *\n        +arrOfLineItems[action.index].unitPrice;\n      arrOfLineItems[action.index].subtotal = total.toFixed(2);\n\n      return {\n        ...state,\n        arrOfLineItems,\n      };\n    }\n\n    case \"ADD_NEW_LINE\": {\n      const updatedLineItems = [\n        ...state.lineItems,\n        {\n          quantity: \"\",\n          unitPrice: \"\",\n          itemName: \"\",\n          subtotal: \"\",\n        },\n      ];\n\n      return {\n        ...state,\n        lineItems: updatedLineItems,\n      };\n    }\n\n    case \"DELETE_LINE\": {\n      const updatedLineItems = [...state.lineItems];\n      updatedLineItems.splice(action.index, 1);\n      return {\n        ...state,\n        lineItems: updatedLineItems,\n      };\n    }\n\n    case \"SELECT_LINE_ITEMS\": {\n      return {\n        ...state,\n        selectedLineItems: action.value,\n      };\n    }\n\n    case \"RESET\": {\n      return initialState;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport const lineItemContext = createContext(initialState);\n\nexport const LineItemStore = ({ children }) => {\n  const [lineItemState, updateLineItem] = useReducer(reducer, initialState);\n\n  return (\n    <lineItemContext.Provider value={{ lineItemState, updateLineItem }}>\n      {children}\n    </lineItemContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}