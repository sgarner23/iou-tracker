{"ast":null,"code":"var _jsxFileName = \"/Users/therealstephen/personal-projects/iou-tracker/client/src/components/UI/Modals/New-Invoice-Modal/InvoiceDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { useParams } from \"react-router\";\nimport { invoiceContext } from \"../../../../store/invoiceStore\";\nimport icon_arrow_down from \"../../../../assets/icon_arrow_down.svg\";\nimport \"./InvoiceDetails.css\";\nimport PaymentTerms from \"./PaymentTerms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InvoiceDetails() {\n  _s();\n\n  const {\n    invoiceState,\n    updateInvoice\n  } = useContext(invoiceContext);\n  const {\n    id\n  } = useParams();\n  let day = \"\";\n  let currentOrderDate = [];\n\n  if (invoiceState.selectedInvoice.order_date) {\n    currentOrderDate = invoiceState.selectedInvoice.order_date.split(\"-\");\n  } //reformatting the date to meet required format, \"yyyy-mm-dd\"\n\n\n  function formatDate(date) {\n    if (!invoiceState.selectedInvoice.order_date) {\n      return \"\";\n    }\n\n    for (let i = 0; i < date[2].length; i++) {\n      if (i > 1) {\n        break;\n      }\n\n      day += date[2].charAt(i);\n    }\n\n    date[2] = day;\n    return date = date.join(\"-\");\n  } //updates global state on payment terms that's later used to store in DB\n\n\n  function clickPaymentTermsHandler() {\n    updateInvoice({\n      type: \"SELECT_PAYMENT_TERMS\"\n    });\n  } //Function used on form and reusable accross all fields by referencing the \"name\" property\n  //Global state is updated in real time\n\n\n  function formChangeHandler(e) {\n    updateInvoice({\n      type: e.target.name,\n      value: e.target.value\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container invoice-detail-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"invoice-date\",\n        className: \"label bill-to-label\",\n        children: \"Invoice Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        className: \"invoice-input bill-to-input date-input\",\n        name: \"invoiceDate\",\n        onChange: formChangeHandler,\n        value: invoiceState.selectedInvoice.order_date && formatDate(currentOrderDate)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), id ? null : /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"payment-terms\",\n          className: \"label bill-to-label\",\n          children: \"Payment Terms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invoice-input bill-to-input date-input select-dropdown\",\n          name: \"payment-terms\",\n          children: [invoiceState.displayMessage, /*#__PURE__*/_jsxDEV(\"img\", {\n            src: icon_arrow_down,\n            alt: \"down-arrow\",\n            className: \"invoice-down-arrow\",\n            onClick: clickPaymentTermsHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), invoiceState.paymentTermOptions && /*#__PURE__*/_jsxDEV(PaymentTerms, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"project-description\",\n        className: \"label bill-to-label\",\n        children: \"Project Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"invoice-input bill-to-input date-input\",\n        name: \"projectDescription\",\n        onChange: formChangeHandler,\n        value: invoiceState.selectedInvoice ? invoiceState.selectedInvoice.project_type : invoiceState.projectDescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InvoiceDetails, \"VKmZgshn1qkql26O2TQTuzO4ePM=\", false, function () {\n  return [useParams];\n});\n\n_c = InvoiceDetails;\nexport default InvoiceDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"InvoiceDetails\");","map":{"version":3,"sources":["/Users/therealstephen/personal-projects/iou-tracker/client/src/components/UI/Modals/New-Invoice-Modal/InvoiceDetails.js"],"names":["React","useContext","useParams","invoiceContext","PaymentTerms","InvoiceDetails","invoiceState","updateInvoice","id","day","currentOrderDate","selectedInvoice","order_date","split","formatDate","date","i","length","charAt","join","clickPaymentTermsHandler","type","formChangeHandler","e","target","name","value","displayMessage","icon_arrow_down","paymentTermOptions","project_type","projectDescription"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,cAAT,QAA+B,gCAA/B;;AAEA,OAAO,sBAAP;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,SAASC,cAAT,GAA0B;AAAA;;AACxB,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAkCN,UAAU,CAACE,cAAD,CAAlD;AACA,QAAM;AAAEK,IAAAA;AAAF,MAASN,SAAS,EAAxB;AAEA,MAAIO,GAAG,GAAG,EAAV;AACA,MAAIC,gBAAgB,GAAG,EAAvB;;AAEA,MAAIJ,YAAY,CAACK,eAAb,CAA6BC,UAAjC,EAA6C;AAC3CF,IAAAA,gBAAgB,GAAGJ,YAAY,CAACK,eAAb,CAA6BC,UAA7B,CAAwCC,KAAxC,CAA8C,GAA9C,CAAnB;AACD,GATuB,CAWxB;;;AACA,WAASC,UAAT,CAAoBC,IAApB,EAA0B;AACxB,QAAI,CAACT,YAAY,CAACK,eAAb,CAA6BC,UAAlC,EAA8C;AAC5C,aAAO,EAAP;AACD;;AACD,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAAC,CAAD,CAAJ,CAAQE,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,UAAIA,CAAC,GAAG,CAAR,EAAW;AACT;AACD;;AACDP,MAAAA,GAAG,IAAIM,IAAI,CAAC,CAAD,CAAJ,CAAQG,MAAR,CAAeF,CAAf,CAAP;AACD;;AACDD,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUN,GAAV;AACA,WAAQM,IAAI,GAAGA,IAAI,CAACI,IAAL,CAAU,GAAV,CAAf;AACD,GAxBuB,CA0BxB;;;AACA,WAASC,wBAAT,GAAoC;AAClCb,IAAAA,aAAa,CAAC;AAAEc,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAb;AACD,GA7BuB,CA+BxB;AACA;;;AACA,WAASC,iBAAT,CAA2BC,CAA3B,EAA8B;AAC5BhB,IAAAA,aAAa,CAAC;AAAEc,MAAAA,IAAI,EAAEE,CAAC,CAACC,MAAF,CAASC,IAAjB;AAAuBC,MAAAA,KAAK,EAAEH,CAAC,CAACC,MAAF,CAASE;AAAvC,KAAD,CAAb;AACD;;AAED,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,0CAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,cAAf;AAA8B,QAAA,SAAS,EAAC,qBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,wCAFZ;AAGE,QAAA,IAAI,EAAC,aAHP;AAIE,QAAA,QAAQ,EAAEJ,iBAJZ;AAKE,QAAA,KAAK,EACHhB,YAAY,CAACK,eAAb,CAA6BC,UAA7B,IACAE,UAAU,CAACJ,gBAAD;AAPd;AAAA;AAAA;AAAA;AAAA,cAJF,EAgBGF,EAAE,GAAG,IAAH,gBACD,QAAC,KAAD,CAAO,QAAP;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,eAAf;AAA+B,UAAA,SAAS,EAAC,qBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AACE,UAAA,SAAS,EAAC,wDADZ;AAEE,UAAA,IAAI,EAAC,eAFP;AAAA,qBAIGF,YAAY,CAACqB,cAJhB,eAKE;AACE,YAAA,GAAG,EAAEC,eADP;AAEE,YAAA,GAAG,EAAC,YAFN;AAGE,YAAA,SAAS,EAAC,oBAHZ;AAIE,YAAA,OAAO,EAAER;AAJX;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,EAgBGd,YAAY,CAACuB,kBAAb,iBAAmC,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBAhBtC;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ,eAoCE;AAAO,QAAA,OAAO,EAAC,qBAAf;AAAqC,QAAA,SAAS,EAAC,qBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApCF,eAuCE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,wCAFZ;AAGE,QAAA,IAAI,EAAC,oBAHP;AAIE,QAAA,QAAQ,EAAEP,iBAJZ;AAKE,QAAA,KAAK,EACHhB,YAAY,CAACK,eAAb,GACIL,YAAY,CAACK,eAAb,CAA6BmB,YADjC,GAEIxB,YAAY,CAACyB;AARrB;AAAA;AAAA;AAAA;AAAA,cAvCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuDD;;GA5FQ1B,c;UAEQH,S;;;KAFRG,c;AA8FT,eAAeA,cAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { useParams } from \"react-router\";\nimport { invoiceContext } from \"../../../../store/invoiceStore\";\nimport icon_arrow_down from \"../../../../assets/icon_arrow_down.svg\";\nimport \"./InvoiceDetails.css\";\nimport PaymentTerms from \"./PaymentTerms\";\n\nfunction InvoiceDetails() {\n  const { invoiceState, updateInvoice } = useContext(invoiceContext);\n  const { id } = useParams();\n\n  let day = \"\";\n  let currentOrderDate = [];\n\n  if (invoiceState.selectedInvoice.order_date) {\n    currentOrderDate = invoiceState.selectedInvoice.order_date.split(\"-\");\n  }\n\n  //reformatting the date to meet required format, \"yyyy-mm-dd\"\n  function formatDate(date) {\n    if (!invoiceState.selectedInvoice.order_date) {\n      return \"\";\n    }\n    for (let i = 0; i < date[2].length; i++) {\n      if (i > 1) {\n        break;\n      }\n      day += date[2].charAt(i);\n    }\n    date[2] = day;\n    return (date = date.join(\"-\"));\n  }\n\n  //updates global state on payment terms that's later used to store in DB\n  function clickPaymentTermsHandler() {\n    updateInvoice({ type: \"SELECT_PAYMENT_TERMS\" });\n  }\n\n  //Function used on form and reusable accross all fields by referencing the \"name\" property\n  //Global state is updated in real time\n  function formChangeHandler(e) {\n    updateInvoice({ type: e.target.name, value: e.target.value });\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"input-container invoice-detail-container\">\n        <label htmlFor=\"invoice-date\" className=\"label bill-to-label\">\n          Invoice Date\n        </label>\n        <input\n          type=\"date\"\n          className=\"invoice-input bill-to-input date-input\"\n          name=\"invoiceDate\"\n          onChange={formChangeHandler}\n          value={\n            invoiceState.selectedInvoice.order_date &&\n            formatDate(currentOrderDate)\n          }\n        />\n\n        {/* Users are only allowed to edit certain details once an invoice is submitted */}\n        {id ? null : (\n          <React.Fragment>\n            <label htmlFor=\"payment-terms\" className=\"label bill-to-label\">\n              Payment Terms\n            </label>\n            <div\n              className=\"invoice-input bill-to-input date-input select-dropdown\"\n              name=\"payment-terms\"\n            >\n              {invoiceState.displayMessage}\n              <img\n                src={icon_arrow_down}\n                alt=\"down-arrow\"\n                className=\"invoice-down-arrow\"\n                onClick={clickPaymentTermsHandler}\n              />\n            </div>\n            {invoiceState.paymentTermOptions && <PaymentTerms />}\n          </React.Fragment>\n        )}\n        <label htmlFor=\"project-description\" className=\"label bill-to-label\">\n          Project Description\n        </label>\n        <input\n          type=\"text\"\n          className=\"invoice-input bill-to-input date-input\"\n          name=\"projectDescription\"\n          onChange={formChangeHandler}\n          value={\n            invoiceState.selectedInvoice\n              ? invoiceState.selectedInvoice.project_type\n              : invoiceState.projectDescription\n          }\n        />\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default InvoiceDetails;\n"]},"metadata":{},"sourceType":"module"}