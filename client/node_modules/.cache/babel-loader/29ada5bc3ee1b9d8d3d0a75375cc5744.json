{"ast":null,"code":"var _jsxFileName = \"/Users/therealstephen/personal-projects/iou-tracker/client/src/store/invoiceStore.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  paymentTermOptions: false,\n  userStreetAddress: \"\",\n  userCity: \"\",\n  userState: \"\",\n  userZipCode: \"\",\n  userCountry: \"\",\n  clientName: \"\",\n  clientEmail: \"\",\n  clientStreetAddress: \"\",\n  clientCity: \"\",\n  clientState: \"\",\n  clientZipCode: \"\",\n  clientCountry: \"\",\n  invoiceDate: \"\",\n  displayMessage: \"\",\n  numOfDays: \"\",\n  projectDescription: \"\",\n  currentInvoiceID: null,\n  selectedInvoice: null\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SELECT_PAYMENT_TERMS\":\n      {\n        return { ...state,\n          paymentTermOptions: !state.paymentTermOptions\n        };\n      }\n\n    case \"userStreetAddress\":\n      {\n        let editedInvoice = state.selectedInvoice;\n\n        if (state.selectedInvoice) {\n          editedInvoice.user_street_address = action.value;\n          return { ...state,\n            selectedInvoice: editedInvoice\n          };\n        }\n\n        return { ...state,\n          userStreetAddress: action.value\n        };\n      }\n\n    case \"userCity\":\n      {\n        let editedInvoice = state.selectedInvoice;\n\n        if (state.selectedInvoice) {\n          editedInvoice.user_city = action.value;\n          return { ...state,\n            selectedInvoice: editedInvoice\n          };\n        }\n\n        return { ...state,\n          userCity: action.value\n        };\n      }\n\n    case \"userState\":\n      {\n        let editedInvoice = state.selectedInvoice;\n\n        if (state.selectedInvoice) {\n          editedInvoice.user_state = action.value;\n          return { ...state,\n            selectedInvoice: editedInvoice\n          };\n        }\n\n        return { ...state,\n          userState: action.value\n        };\n      }\n\n    case \"userZipCode\":\n      {\n        let editedInvoice = state.selectedInvoice;\n\n        if (state.selectedInvoice) {\n          editedInvoice.user_zip = action.value;\n          return { ...state,\n            selectedInvoice: editedInvoice\n          };\n        }\n\n        return { ...state,\n          userZipCode: action.value\n        };\n      }\n\n    case \"userCountry\":\n      {\n        let editedInvoice = state.selectedInvoice;\n\n        if (state.selectedInvoice) {\n          editedInvoice.user_country = action.value;\n          return { ...state,\n            selectedInvoice: editedInvoice\n          };\n        }\n\n        return { ...state,\n          userCountry: action.value\n        };\n      }\n\n    case \"clientName\":\n      {\n        let editedInvoice = state.selectedInvoice;\n\n        if (state.selectedInvoice) {\n          editedInvoice.client_name = action.value;\n          return { ...state,\n            selectedInvoice: editedInvoice\n          };\n        }\n\n        return { ...state,\n          clientName: action.value\n        };\n      }\n\n    case \"clientEmail\":\n      {\n        let editedInvoice = state.selectedInvoice;\n\n        if (state.selectedInvoice) {\n          editedInvoice.client_email = action.value;\n          return { ...state,\n            selectedInvoice: editedInvoice\n          };\n        }\n\n        return { ...state,\n          clientEmail: action.value\n        };\n      }\n\n    case \"clientStreetAddress\":\n      {\n        let editedInvoice = state.selectedInvoice;\n\n        if (state.selectedInvoice) {\n          editedInvoice.client_street_address = action.value;\n          return { ...state,\n            selectedInvoice: editedInvoice\n          };\n        }\n\n        return { ...state,\n          clientStreetAddress: action.value\n        };\n      }\n\n    case \"clientCity\":\n      {\n        let editedInvoice = state.selectedInvoice;\n\n        if (state.selectedInvoice) {\n          editedInvoice.client_city = action.value;\n          return { ...state,\n            selectedInvoice: editedInvoice\n          };\n        }\n\n        return { ...state,\n          clientCity: action.value\n        };\n      }\n\n    case \"clientState\":\n      {\n        let editedInvoice = state.selectedInvoice;\n\n        if (state.selectedInvoice) {\n          editedInvoice.client_state = action.value;\n          return { ...state,\n            selectedInvoice: editedInvoice\n          };\n        }\n\n        return { ...state,\n          clientState: action.value\n        };\n      }\n\n    case \"clientZipCode\":\n      {\n        let editedInvoice = state.selectedInvoice;\n\n        if (state.selectedInvoice) {\n          editedInvoice.client_zip = action.value;\n          return { ...state,\n            selectedInvoice: editedInvoice\n          };\n        }\n\n        return { ...state,\n          clientZipCode: action.value\n        };\n      }\n\n    case \"clientCountry\":\n      {\n        let editedInvoice = state.selectedInvoice;\n\n        if (state.selectedInvoice) {\n          editedInvoice.client_country = action.value;\n          return { ...state,\n            selectedInvoice: editedInvoice\n          };\n        }\n\n        return { ...state,\n          clientCountry: action.value\n        };\n      }\n\n    case \"invoiceDate\":\n      {\n        let editedInvoice = state.selectedInvoice;\n\n        if (state.selectedInvoice) {\n          editedInvoice.order_date = action.value;\n          return { ...state,\n            selectedInvoice: editedInvoice\n          };\n        }\n\n        return { ...state,\n          invoiceDate: action.value\n        };\n      }\n\n    case \"UPDATE_PAYMENT_TERMS\":\n      {\n        return { ...state,\n          displayMessage: action.displayMessage,\n          numOfDays: action.numOfDays\n        };\n      }\n\n    case \"projectDescription\":\n      {\n        let editedInvoice = state.selectedInvoice;\n\n        if (state.selectedInvoice) {\n          editedInvoice.project_type = action.value;\n          return { ...state,\n            selectedInvoice: editedInvoice\n          };\n        }\n\n        return { ...state,\n          projectDescription: action.value\n        };\n      }\n\n    case \"RESET\":\n      {\n        return initialState;\n      }\n\n    case \"INVOICE_ID\":\n      {\n        return { ...state,\n          currentInvoiceID: action.value\n        };\n      }\n\n    case \"SELECTED_INVOICE\":\n      {\n        return { ...state,\n          selectedInvoice: action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const invoiceContext = /*#__PURE__*/createContext(initialState);\nexport const InvoiceStore = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [invoiceState, updateInvoice] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(invoiceContext.Provider, {\n    value: {\n      invoiceState,\n      updateInvoice\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InvoiceStore, \"ohbKMw28TsLoEQSWBb4GdWGNrfY=\");\n\n_c = InvoiceStore;\n\nvar _c;\n\n$RefreshReg$(_c, \"InvoiceStore\");","map":{"version":3,"sources":["/Users/therealstephen/personal-projects/iou-tracker/client/src/store/invoiceStore.js"],"names":["React","createContext","useReducer","initialState","paymentTermOptions","userStreetAddress","userCity","userState","userZipCode","userCountry","clientName","clientEmail","clientStreetAddress","clientCity","clientState","clientZipCode","clientCountry","invoiceDate","displayMessage","numOfDays","projectDescription","currentInvoiceID","selectedInvoice","reducer","state","action","type","editedInvoice","user_street_address","value","user_city","user_state","user_zip","user_country","client_name","client_email","client_street_address","client_city","client_state","client_zip","client_country","order_date","project_type","invoiceContext","InvoiceStore","children","invoiceState","updateInvoice"],"mappings":"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","sourcesContent":["import React, { createContext, useReducer } from \"react\";\n\nconst initialState = {\n  paymentTermOptions: false,\n  userStreetAddress: \"\",\n  userCity: \"\",\n  userState: \"\",\n  userZipCode: \"\",\n  userCountry: \"\",\n  clientName: \"\",\n  clientEmail: \"\",\n  clientStreetAddress: \"\",\n  clientCity: \"\",\n  clientState: \"\",\n  clientZipCode: \"\",\n  clientCountry: \"\",\n  invoiceDate: \"\",\n  displayMessage: \"\",\n  numOfDays: \"\",\n  projectDescription: \"\",\n  currentInvoiceID: null,\n  selectedInvoice: null,\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SELECT_PAYMENT_TERMS\": {\n      return {\n        ...state,\n        paymentTermOptions: !state.paymentTermOptions,\n      };\n    }\n\n    case \"userStreetAddress\": {\n      let editedInvoice = state.selectedInvoice;\n      if (state.selectedInvoice) {\n        editedInvoice.user_street_address = action.value;\n        return {\n          ...state,\n          selectedInvoice: editedInvoice,\n        };\n      }\n      return {\n        ...state,\n        userStreetAddress: action.value,\n      };\n    }\n\n    case \"userCity\": {\n      let editedInvoice = state.selectedInvoice;\n      if (state.selectedInvoice) {\n        editedInvoice.user_city = action.value;\n        return {\n          ...state,\n          selectedInvoice: editedInvoice,\n        };\n      }\n\n      return {\n        ...state,\n        userCity: action.value,\n      };\n    }\n\n    case \"userState\": {\n      let editedInvoice = state.selectedInvoice;\n      if (state.selectedInvoice) {\n        editedInvoice.user_state = action.value;\n        return {\n          ...state,\n          selectedInvoice: editedInvoice,\n        };\n      }\n      return {\n        ...state,\n        userState: action.value,\n      };\n    }\n\n    case \"userZipCode\": {\n      let editedInvoice = state.selectedInvoice;\n      if (state.selectedInvoice) {\n        editedInvoice.user_zip = action.value;\n        return {\n          ...state,\n          selectedInvoice: editedInvoice,\n        };\n      }\n      return {\n        ...state,\n        userZipCode: action.value,\n      };\n    }\n\n    case \"userCountry\": {\n      let editedInvoice = state.selectedInvoice;\n      if (state.selectedInvoice) {\n        editedInvoice.user_country = action.value;\n        return {\n          ...state,\n          selectedInvoice: editedInvoice,\n        };\n      }\n      return {\n        ...state,\n        userCountry: action.value,\n      };\n    }\n\n    case \"clientName\": {\n      let editedInvoice = state.selectedInvoice;\n      if (state.selectedInvoice) {\n        editedInvoice.client_name = action.value;\n        return {\n          ...state,\n          selectedInvoice: editedInvoice,\n        };\n      }\n      return {\n        ...state,\n        clientName: action.value,\n      };\n    }\n\n    case \"clientEmail\": {\n      let editedInvoice = state.selectedInvoice;\n      if (state.selectedInvoice) {\n        editedInvoice.client_email = action.value;\n        return {\n          ...state,\n          selectedInvoice: editedInvoice,\n        };\n      }\n      return {\n        ...state,\n        clientEmail: action.value,\n      };\n    }\n\n    case \"clientStreetAddress\": {\n      let editedInvoice = state.selectedInvoice;\n      if (state.selectedInvoice) {\n        editedInvoice.client_street_address = action.value;\n        return {\n          ...state,\n          selectedInvoice: editedInvoice,\n        };\n      }\n      return {\n        ...state,\n        clientStreetAddress: action.value,\n      };\n    }\n\n    case \"clientCity\": {\n      let editedInvoice = state.selectedInvoice;\n      if (state.selectedInvoice) {\n        editedInvoice.client_city = action.value;\n        return {\n          ...state,\n          selectedInvoice: editedInvoice,\n        };\n      }\n      return {\n        ...state,\n        clientCity: action.value,\n      };\n    }\n\n    case \"clientState\": {\n      let editedInvoice = state.selectedInvoice;\n      if (state.selectedInvoice) {\n        editedInvoice.client_state = action.value;\n        return {\n          ...state,\n          selectedInvoice: editedInvoice,\n        };\n      }\n      return {\n        ...state,\n        clientState: action.value,\n      };\n    }\n\n    case \"clientZipCode\": {\n      let editedInvoice = state.selectedInvoice;\n      if (state.selectedInvoice) {\n        editedInvoice.client_zip = action.value;\n        return {\n          ...state,\n          selectedInvoice: editedInvoice,\n        };\n      }\n      return {\n        ...state,\n        clientZipCode: action.value,\n      };\n    }\n\n    case \"clientCountry\": {\n      let editedInvoice = state.selectedInvoice;\n      if (state.selectedInvoice) {\n        editedInvoice.client_country = action.value;\n        return {\n          ...state,\n          selectedInvoice: editedInvoice,\n        };\n      }\n      return {\n        ...state,\n        clientCountry: action.value,\n      };\n    }\n\n    case \"invoiceDate\": {\n      let editedInvoice = state.selectedInvoice;\n      if (state.selectedInvoice) {\n        editedInvoice.order_date = action.value;\n        return {\n          ...state,\n          selectedInvoice: editedInvoice,\n        };\n      }\n      return {\n        ...state,\n        invoiceDate: action.value,\n      };\n    }\n\n    case \"UPDATE_PAYMENT_TERMS\": {\n      return {\n        ...state,\n        displayMessage: action.displayMessage,\n        numOfDays: action.numOfDays,\n      };\n    }\n\n    case \"projectDescription\": {\n      let editedInvoice = state.selectedInvoice;\n      if (state.selectedInvoice) {\n        editedInvoice.project_type = action.value;\n        return {\n          ...state,\n          selectedInvoice: editedInvoice,\n        };\n      }\n      return {\n        ...state,\n        projectDescription: action.value,\n      };\n    }\n\n    case \"RESET\": {\n      return initialState;\n    }\n\n    case \"INVOICE_ID\": {\n      return {\n        ...state,\n        currentInvoiceID: action.value,\n      };\n    }\n\n    case \"SELECTED_INVOICE\": {\n      return {\n        ...state,\n        selectedInvoice: action.value,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport const invoiceContext = createContext(initialState);\n\nexport const InvoiceStore = ({ children }) => {\n  const [invoiceState, updateInvoice] = useReducer(reducer, initialState);\n\n  return (\n    <invoiceContext.Provider value={{ invoiceState, updateInvoice }}>\n      {children}\n    </invoiceContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}