{"ast":null,"code":"var _jsxFileName = \"/Users/therealstephen/personal-projects/iou-tracker/client/src/components/LoginFormContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useEffect, useContext, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { userContext } from \"../store/userStore\";\nimport LoginButton from \"../components/LoginButton\";\nimport LoginInput from \"../components/LoginInput\";\nimport getUserInfoOnLogin from \"../api/getUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginFormContainer = _ref => {\n  _s();\n\n  let {\n    loginIsActive\n  } = _ref;\n  const {\n    state,\n    dispatch\n  } = useContext(userContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const [loginNotSuccessful, setLoginNotSuccessful] = useState(null);\n  const navigate = useNavigate();\n  const initialValues = {\n    firstName: \"\",\n    firstNameError: false,\n    lastName: \"\",\n    lastNameError: false,\n    emailAddress: \"\",\n    emailAddressError: false,\n    password: \"\",\n    passwordError: false,\n    confirmPassword: \"\",\n    confirmPasswordError: false\n  };\n  const [formValues, setFormValues] = useReducer((curVals, newVals) => ({ ...curVals,\n    ...newVals\n  }), initialValues);\n  const {\n    firstName,\n    firstNameError,\n    lastName,\n    lastNameError,\n    emailAddress,\n    emailAddressError,\n    password,\n    passwordError,\n    confirmPassword,\n    confirmPasswordError\n  } = formValues;\n\n  function resetForm() {\n    setFormValues({\n      firstName: \"\",\n      firstNameError: false,\n      lastName: \"\",\n      lastNameError: false,\n      emailAddress: \"\",\n      emailAddressError: false,\n      password: \"\",\n      passwordError: false,\n      confirmPassword: \"\",\n      confirmPasswordError: false\n    });\n  }\n\n  useEffect(() => {\n    resetForm();\n  }, [loginIsActive]);\n\n  function handleFormChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues({\n      [name]: value\n    });\n\n    if (name === \"emailAddress\") {\n      setFormValues({\n        emailAddressError: false\n      });\n    }\n\n    if (name === \"password\") {\n      setFormValues({\n        passwordError: false\n      });\n    }\n\n    if (name === \"confirmPassword\" && !confirmPassword !== password) {\n      setFormValues({\n        confirmPasswordError: false\n      });\n    }\n\n    if (name === \"firstName\") {\n      setFormValues({\n        firstNameError: false\n      });\n    }\n\n    if (name === \"lastName\") {\n      setFormValues({\n        lastNameError: false\n      });\n    }\n  }\n\n  async function submitHandler(e) {\n    e.preventDefault();\n    let isLoginError = false;\n\n    if (!emailAddress.includes(\"@\")) {\n      setFormValues({\n        emailAddressError: true\n      });\n      isLoginError = true;\n    }\n\n    if (password.length < 6) {\n      setFormValues({\n        passwordError: true\n      });\n      isLoginError = true;\n    }\n\n    if (firstName.length === 0) {\n      setFormValues({\n        firstNameError: true\n      });\n    }\n\n    if (lastName.length === 0) {\n      setFormValues({\n        lastNameError: true\n      });\n    }\n\n    if (confirmPassword !== password) {\n      setFormValues({\n        confirmPasswordError: true\n      });\n    }\n\n    if (!isLoginError && loginIsActive) {\n      setIsLoading(true);\n      const userInfo = await getUserInfoOnLogin(emailAddress, password);\n      state.user = userInfo;\n\n      if (state.user) {\n        navigate(\"/profile\");\n      } else {\n        setLoginNotSuccessful(true);\n      }\n\n      setIsLoading(false);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [!loginIsActive && /*#__PURE__*/_jsxDEV(LoginInput, {\n      type: \"text\",\n      name: \"firstName\",\n      placeholder: \"First Name\",\n      value: firstName,\n      onChange: handleFormChange,\n      classes: firstNameError ? \"input error\" : \"input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this), firstNameError && !loginIsActive && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: \"Name field required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this), !loginIsActive && /*#__PURE__*/_jsxDEV(LoginInput, {\n      type: \"text\",\n      placeholder: \"Last Name\",\n      name: \"lastName\",\n      value: lastName,\n      onChange: handleFormChange,\n      classes: firstNameError ? \"input error\" : \"input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), lastNameError && !loginIsActive && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: \"Name field required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LoginInput, {\n      type: \"text\",\n      placeholder: \"Email Address\",\n      name: \"emailAddress\",\n      value: emailAddress,\n      onChange: handleFormChange,\n      classes: emailAddressError ? \"input error\" : \"input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), emailAddressError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: \"Valid email required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LoginInput, {\n      type: \"password\",\n      placeholder: \"Password\",\n      name: \"password\",\n      value: password,\n      onChange: handleFormChange,\n      classes: passwordError ? \"input error\" : \"input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), passwordError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: \"Password length must be at least 6 characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this), !loginIsActive && /*#__PURE__*/_jsxDEV(LoginInput, {\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: handleFormChange,\n      classes: confirmPasswordError ? \"input error\" : \"input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this), confirmPasswordError && !loginIsActive && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: \"Passwords must match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"big-btn\",\n      children: [/*#__PURE__*/_jsxDEV(LoginButton, {\n        classes: \"active\",\n        children: [loginIsActive ? \"Login\" : \"Signup\", \" \", isLoading && \". . .\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), loginNotSuccessful && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Error: email or password incorrect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginFormContainer, \"BSoz9hlIF6NXvY8zCz1+Jt3vJ24=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginFormContainer;\nexport default LoginFormContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginFormContainer\");","map":{"version":3,"sources":["/Users/therealstephen/personal-projects/iou-tracker/client/src/components/LoginFormContainer.js"],"names":["React","useReducer","useEffect","useContext","useState","useNavigate","userContext","LoginButton","LoginInput","getUserInfoOnLogin","LoginFormContainer","loginIsActive","state","dispatch","isLoading","setIsLoading","loginNotSuccessful","setLoginNotSuccessful","navigate","initialValues","firstName","firstNameError","lastName","lastNameError","emailAddress","emailAddressError","password","passwordError","confirmPassword","confirmPasswordError","formValues","setFormValues","curVals","newVals","resetForm","handleFormChange","e","name","value","target","submitHandler","preventDefault","isLoginError","includes","length","userInfo","user"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect, useContext, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { userContext } from \"../store/userStore\";\nimport LoginButton from \"../components/LoginButton\";\nimport LoginInput from \"../components/LoginInput\";\nimport getUserInfoOnLogin from \"../api/getUser\";\n\nconst LoginFormContainer = ({ loginIsActive }) => {\n  const { state, dispatch } = useContext(userContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const [loginNotSuccessful, setLoginNotSuccessful] = useState(null);\n  const navigate = useNavigate();\n\n  const initialValues = {\n    firstName: \"\",\n    firstNameError: false,\n    lastName: \"\",\n    lastNameError: false,\n    emailAddress: \"\",\n    emailAddressError: false,\n    password: \"\",\n    passwordError: false,\n    confirmPassword: \"\",\n    confirmPasswordError: false,\n  };\n\n  const [formValues, setFormValues] = useReducer(\n    (curVals, newVals) => ({ ...curVals, ...newVals }),\n    initialValues\n  );\n\n  const {\n    firstName,\n    firstNameError,\n    lastName,\n    lastNameError,\n    emailAddress,\n    emailAddressError,\n    password,\n    passwordError,\n    confirmPassword,\n    confirmPasswordError,\n  } = formValues;\n\n  function resetForm() {\n    setFormValues({\n      firstName: \"\",\n      firstNameError: false,\n      lastName: \"\",\n      lastNameError: false,\n      emailAddress: \"\",\n      emailAddressError: false,\n      password: \"\",\n      passwordError: false,\n      confirmPassword: \"\",\n      confirmPasswordError: false,\n    });\n  }\n\n  useEffect(() => {\n    resetForm();\n  }, [loginIsActive]);\n\n  function handleFormChange(e) {\n    const { name, value } = e.target;\n    setFormValues({ [name]: value });\n\n    if (name === \"emailAddress\") {\n      setFormValues({ emailAddressError: false });\n    }\n    if (name === \"password\") {\n      setFormValues({ passwordError: false });\n    }\n    if (name === \"confirmPassword\" && !confirmPassword !== password) {\n      setFormValues({ confirmPasswordError: false });\n    }\n    if (name === \"firstName\") {\n      setFormValues({ firstNameError: false });\n    }\n    if (name === \"lastName\") {\n      setFormValues({ lastNameError: false });\n    }\n  }\n\n  async function submitHandler(e) {\n    e.preventDefault();\n    let isLoginError = false;\n\n    if (!emailAddress.includes(\"@\")) {\n      setFormValues({ emailAddressError: true });\n      isLoginError = true;\n    }\n    if (password.length < 6) {\n      setFormValues({ passwordError: true });\n      isLoginError = true;\n    }\n    if (firstName.length === 0) {\n      setFormValues({ firstNameError: true });\n    }\n    if (lastName.length === 0) {\n      setFormValues({ lastNameError: true });\n    }\n    if (confirmPassword !== password) {\n      setFormValues({ confirmPasswordError: true });\n    }\n\n    if (!isLoginError && loginIsActive) {\n      setIsLoading(true);\n      const userInfo = await getUserInfoOnLogin(emailAddress, password);\n      state.user = userInfo;\n      if (state.user) {\n        navigate(\"/profile\");\n      } else {\n        setLoginNotSuccessful(true);\n      }\n\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      {!loginIsActive && (\n        <LoginInput\n          type={\"text\"}\n          name={\"firstName\"}\n          placeholder={\"First Name\"}\n          value={firstName}\n          onChange={handleFormChange}\n          classes={firstNameError ? \"input error\" : \"input\"}\n        />\n      )}\n      {firstNameError && !loginIsActive && (\n        <p className=\"error-message\">Name field required</p>\n      )}\n      {!loginIsActive && (\n        <LoginInput\n          type={\"text\"}\n          placeholder={\"Last Name\"}\n          name={\"lastName\"}\n          value={lastName}\n          onChange={handleFormChange}\n          classes={firstNameError ? \"input error\" : \"input\"}\n        />\n      )}\n      {lastNameError && !loginIsActive && (\n        <p className=\"error-message\">Name field required</p>\n      )}\n\n      <LoginInput\n        type={\"text\"}\n        placeholder={\"Email Address\"}\n        name={\"emailAddress\"}\n        value={emailAddress}\n        onChange={handleFormChange}\n        classes={emailAddressError ? \"input error\" : \"input\"}\n      />\n      {emailAddressError && (\n        <p className=\"error-message\">Valid email required</p>\n      )}\n      <LoginInput\n        type={\"password\"}\n        placeholder={\"Password\"}\n        name={\"password\"}\n        value={password}\n        onChange={handleFormChange}\n        classes={passwordError ? \"input error\" : \"input\"}\n      />\n      {passwordError && (\n        <p className=\"error-message\">\n          Password length must be at least 6 characters\n        </p>\n      )}\n      {!loginIsActive && (\n        <LoginInput\n          type={\"password\"}\n          placeholder={\"Confirm Password\"}\n          name={\"confirmPassword\"}\n          value={confirmPassword}\n          onChange={handleFormChange}\n          classes={confirmPasswordError ? \"input error\" : \"input\"}\n        />\n      )}\n      {confirmPasswordError && !loginIsActive && (\n        <p className=\"error-message\">Passwords must match</p>\n      )}\n\n      <div className=\"big-btn\">\n        <LoginButton classes={\"active\"}>\n          {loginIsActive ? \"Login\" : \"Signup\"} {isLoading && \". . .\"}\n        </LoginButton>\n        {loginNotSuccessful && <p>Error: email or password incorrect</p>}\n      </div>\n    </form>\n  );\n};\n\nexport default LoginFormContainer;\n"]},"metadata":{},"sourceType":"module"}