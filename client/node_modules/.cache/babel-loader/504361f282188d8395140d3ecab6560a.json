{"ast":null,"code":"import React,{useContext}from\"react\";import{invoiceContext}from\"../../../../store/invoiceStore\";import\"./BillTo.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function BillTo(){var _useContext=useContext(invoiceContext),invoiceState=_useContext.invoiceState,updateInvoice=_useContext.updateInvoice;//Function used on form and reusable accross all fields by referencing the \"name\" property\n//Global state is updated in real time\nfunction formChangeHandler(e){updateInvoice({type:e.target.name,value:e.target.value});}return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{className:\"bill\",children:\"Bill To\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"clientName\",className:\"label bill-to-label\",children:\"Client's Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"invoice-input bill-to-input\",name:\"clientName\",onChange:formChangeHandler,value:invoiceState.selectedInvoice?invoiceState.selectedInvoice.client_name:invoiceState.clientName}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"client-email\",className:\"label bill-to-label\",children:\"Client's Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"invoice-input bill-to-input\",name:\"clientEmail\",value:invoiceState.selectedInvoice?invoiceState.selectedInvoice.client_email:invoiceState.clientEmail,onChange:formChangeHandler}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"client-street\",className:\"label bill-to-label\",children:\"Street Address\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"invoice-input bill-to-input\",name:\"clientStreetAddress\",value:invoiceState.selectedInvoice?invoiceState.selectedInvoice.client_street_address:invoiceState.clientStreetAddress,onChange:formChangeHandler}),/*#__PURE__*/_jsxs(\"div\",{className:\"city-state-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"clientCity\",className:\"label\",children:\"City\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"clientCity\",value:invoiceState.selectedInvoice?invoiceState.selectedInvoice.client_city:invoiceState.clientCity,onChange:formChangeHandler,className:\"invoice-input city-state-input\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"clientState\",className:\"label state-label\",children:\"State\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"clientState\",value:invoiceState.selectedInvoice?invoiceState.selectedInvoice.client_state:invoiceState.clientState,onChange:formChangeHandler,className:\"invoice-input city-state-input state-input\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"city-state-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"clientZipCode\",className:\"label\",children:\"Zip Code\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"clientZipCode\",value:invoiceState.selectedInvoice?invoiceState.selectedInvoice.client_zip:invoiceState.clientZipCode,onChange:formChangeHandler,className:\"invoice-input city-state-input\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"clientCountry\",className:\"label state-label\",children:\"Country\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"clientCountry\",value:invoiceState.selectedInvoice?invoiceState.selectedInvoice.client_country:invoiceState.clientCountry,onChange:formChangeHandler,className:\"invoice-input city-state-input state-input\"})]})]})]})]});}export default BillTo;","map":{"version":3,"sources":["/Users/therealstephen/personal-projects/iou-tracker-client/src/components/UI/Modals/New-Invoice-Modal/BillTo.js"],"names":["React","useContext","invoiceContext","BillTo","invoiceState","updateInvoice","formChangeHandler","e","type","target","name","value","selectedInvoice","client_name","clientName","client_email","clientEmail","client_street_address","clientStreetAddress","client_city","clientCity","client_state","clientState","client_zip","clientZipCode","client_country","clientCountry"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { invoiceContext } from \"../../../../store/invoiceStore\";\nimport \"./BillTo.css\";\n\nfunction BillTo() {\n  const { invoiceState, updateInvoice } = useContext(invoiceContext);\n\n  //Function used on form and reusable accross all fields by referencing the \"name\" property\n  //Global state is updated in real time\n  function formChangeHandler(e) {\n    updateInvoice({ type: e.target.name, value: e.target.value });\n  }\n\n  return (\n    <React.Fragment>\n      <p className=\"bill\">Bill To</p>\n      <div className=\"input-container\">\n        <label htmlFor=\"clientName\" className=\"label bill-to-label\">\n          Client's Name\n        </label>\n        <input\n          type=\"text\"\n          className=\"invoice-input bill-to-input\"\n          name=\"clientName\"\n          onChange={formChangeHandler}\n          value={\n            invoiceState.selectedInvoice\n              ? invoiceState.selectedInvoice.client_name\n              : invoiceState.clientName\n          }\n        />\n        <label htmlFor=\"client-email\" className=\"label bill-to-label\">\n          Client's Email\n        </label>\n        <input\n          type=\"text\"\n          className=\"invoice-input bill-to-input\"\n          name=\"clientEmail\"\n          value={\n            invoiceState.selectedInvoice\n              ? invoiceState.selectedInvoice.client_email\n              : invoiceState.clientEmail\n          }\n          onChange={formChangeHandler}\n        />\n        <label htmlFor=\"client-street\" className=\"label bill-to-label\">\n          Street Address\n        </label>\n        <input\n          type=\"text\"\n          className=\"invoice-input bill-to-input\"\n          name=\"clientStreetAddress\"\n          value={\n            invoiceState.selectedInvoice\n              ? invoiceState.selectedInvoice.client_street_address\n              : invoiceState.clientStreetAddress\n          }\n          onChange={formChangeHandler}\n        />\n        <div className=\"city-state-container\">\n          <div className=\"container\">\n            <label htmlFor=\"clientCity\" className=\"label\">\n              City\n            </label>\n            <input\n              type=\"text\"\n              name=\"clientCity\"\n              value={\n                invoiceState.selectedInvoice\n                  ? invoiceState.selectedInvoice.client_city\n                  : invoiceState.clientCity\n              }\n              onChange={formChangeHandler}\n              className=\"invoice-input city-state-input\"\n            />\n          </div>\n          <div className=\"container\">\n            <label htmlFor=\"clientState\" className=\"label state-label\">\n              State\n            </label>\n            <input\n              type=\"text\"\n              name=\"clientState\"\n              value={\n                invoiceState.selectedInvoice\n                  ? invoiceState.selectedInvoice.client_state\n                  : invoiceState.clientState\n              }\n              onChange={formChangeHandler}\n              className=\"invoice-input city-state-input state-input\"\n            />\n          </div>\n        </div>\n        <div className=\"city-state-container\">\n          <div className=\"container\">\n            <label htmlFor=\"clientZipCode\" className=\"label\">\n              Zip Code\n            </label>\n            <input\n              type=\"text\"\n              name=\"clientZipCode\"\n              value={\n                invoiceState.selectedInvoice\n                  ? invoiceState.selectedInvoice.client_zip\n                  : invoiceState.clientZipCode\n              }\n              onChange={formChangeHandler}\n              className=\"invoice-input city-state-input\"\n            />\n          </div>\n          <div className=\"container\">\n            <label htmlFor=\"clientCountry\" className=\"label state-label\">\n              Country\n            </label>\n            <input\n              type=\"text\"\n              name=\"clientCountry\"\n              value={\n                invoiceState.selectedInvoice\n                  ? invoiceState.selectedInvoice.client_country\n                  : invoiceState.clientCountry\n              }\n              onChange={formChangeHandler}\n              className=\"invoice-input city-state-input state-input\"\n            />\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default BillTo;\n"]},"metadata":{},"sourceType":"module"}