{"ast":null,"code":"var _jsxFileName = \"/Users/therealstephen/personal-projects/iou-tracker/client/src/store/lineItemStore.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  lineItems: [{\n    quanity: \"\",\n    unitPrice: \"\",\n    itemName: \"\",\n    subtotal: \"\"\n  }, {\n    quanity: \"\",\n    unitPrice: \"\",\n    itemName: \"\",\n    subtotal: \"\"\n  }]\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"itemName\":\n      {\n        const arrOfLineItems = state.lineItems;\n        arrOfLineItems[action.index].itemName = action.value;\n        return { ...state,\n          lineItems: arrOfLineItems\n        };\n      }\n\n    case \"quanity\":\n      {\n        return [...state, (state[action.index].quanity = +action.value, state[action.index].subtotal = +action.value * +state[action.index].unitPrice).toFixed(2)];\n      }\n\n    case \"unitPrice\":\n      {\n        return [...state, (state[action.index].unitPrice = action.value, state[action.index].subtotal = +state[action.index].quanity * +action.value).toFixed(2)];\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const lineItemContext = /*#__PURE__*/createContext(initialState);\nexport const LineItemStore = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [lineItemState, updateLineItem] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(lineItemContext.Provider, {\n    value: {\n      lineItemState,\n      updateLineItem\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LineItemStore, \"WqvrNRnWKrDhzf+SD+hmPKRK7FA=\");\n\n_c = LineItemStore;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineItemStore\");","map":{"version":3,"sources":["/Users/therealstephen/personal-projects/iou-tracker/client/src/store/lineItemStore.js"],"names":["React","createContext","useReducer","initialState","lineItems","quanity","unitPrice","itemName","subtotal","reducer","state","action","type","arrOfLineItems","index","value","toFixed","lineItemContext","LineItemStore","children","lineItemState","updateLineItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,CACT;AACEC,IAAAA,OAAO,EAAE,EADX;AAEEC,IAAAA,SAAS,EAAE,EAFb;AAGEC,IAAAA,QAAQ,EAAE,EAHZ;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GADS,EAOT;AACEH,IAAAA,OAAO,EAAE,EADX;AAEEC,IAAAA,SAAS,EAAE,EAFb;AAGEC,IAAAA,QAAQ,EAAE,EAHZ;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GAPS;AADQ,CAArB;;AAgBA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AAAiB;AACf,cAAMC,cAAc,GAAGH,KAAK,CAACN,SAA7B;AACAS,QAAAA,cAAc,CAACF,MAAM,CAACG,KAAR,CAAd,CAA6BP,QAA7B,GAAwCI,MAAM,CAACI,KAA/C;AACA,eAAO,EACL,GAAGL,KADE;AAELN,UAAAA,SAAS,EAAES;AAFN,SAAP;AAID;;AAED,SAAK,SAAL;AAAgB;AACd,eAAO,CACL,GAAGH,KADE,EAEL,CAAEA,KAAK,CAACC,MAAM,CAACG,KAAR,CAAL,CAAoBT,OAApB,GAA8B,CAACM,MAAM,CAACI,KAAvC,EACAL,KAAK,CAACC,MAAM,CAACG,KAAR,CAAL,CAAoBN,QAApB,GACC,CAACG,MAAM,CAACI,KAAR,GAAgB,CAACL,KAAK,CAACC,MAAM,CAACG,KAAR,CAAL,CAAoBR,SAFvC,EAEmDU,OAFnD,CAE2D,CAF3D,CAFK,CAAP;AAMD;;AAED,SAAK,WAAL;AAAkB;AAChB,eAAO,CACL,GAAGN,KADE,EAEL,CAAEA,KAAK,CAACC,MAAM,CAACG,KAAR,CAAL,CAAoBR,SAApB,GAAgCK,MAAM,CAACI,KAAxC,EACAL,KAAK,CAACC,MAAM,CAACG,KAAR,CAAL,CAAoBN,QAApB,GACC,CAACE,KAAK,CAACC,MAAM,CAACG,KAAR,CAAL,CAAoBT,OAArB,GAA+B,CAACM,MAAM,CAACI,KAFzC,EAEiDC,OAFjD,CAEyD,CAFzD,CAFK,CAAP;AAMD;;AAED;AACE,aAAON,KAAP;AA7BJ;AA+BD,CAhCD;;AAkCA,OAAO,MAAMO,eAAe,gBAAGhB,aAAa,CAACE,YAAD,CAArC;AAEP,OAAO,MAAMe,aAAa,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC7C,QAAM,CAACC,aAAD,EAAgBC,cAAhB,IAAkCnB,UAAU,CAACO,OAAD,EAAUN,YAAV,CAAlD;AAEA,sBACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAEiB,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,KAAjC;AAAA,cACGF;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CARM;;GAAMD,a;;KAAAA,a","sourcesContent":["import React, { createContext, useReducer } from \"react\";\n\nconst initialState = {\n  lineItems: [\n    {\n      quanity: \"\",\n      unitPrice: \"\",\n      itemName: \"\",\n      subtotal: \"\",\n    },\n    {\n      quanity: \"\",\n      unitPrice: \"\",\n      itemName: \"\",\n      subtotal: \"\",\n    },\n  ],\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"itemName\": {\n      const arrOfLineItems = state.lineItems;\n      arrOfLineItems[action.index].itemName = action.value;\n      return {\n        ...state,\n        lineItems: arrOfLineItems,\n      };\n    }\n\n    case \"quanity\": {\n      return [\n        ...state,\n        ((state[action.index].quanity = +action.value),\n        (state[action.index].subtotal =\n          +action.value * +state[action.index].unitPrice)).toFixed(2),\n      ];\n    }\n\n    case \"unitPrice\": {\n      return [\n        ...state,\n        ((state[action.index].unitPrice = action.value),\n        (state[action.index].subtotal =\n          +state[action.index].quanity * +action.value)).toFixed(2),\n      ];\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport const lineItemContext = createContext(initialState);\n\nexport const LineItemStore = ({ children }) => {\n  const [lineItemState, updateLineItem] = useReducer(reducer, initialState);\n\n  return (\n    <lineItemContext.Provider value={{ lineItemState, updateLineItem }}>\n      {children}\n    </lineItemContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}