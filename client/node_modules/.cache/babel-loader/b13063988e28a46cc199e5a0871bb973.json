{"ast":null,"code":"var _jsxFileName = \"/Users/therealstephen/personal-projects/iou-tracker/client/src/components/LoginFormContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useEffect, useState } from \"react\";\nimport LoginButton from \"../components/LoginButton\";\nimport LoginInput from \"../components/LoginInput\";\nimport getUserInfoOnLogin from \"../api/getUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginFormContainer = _ref => {\n  _s();\n\n  let {\n    loginIsActive\n  } = _ref;\n  const initialValues = {\n    firstName: \"\",\n    firstNameError: false,\n    lastName: \"\",\n    lastNameError: false,\n    emailAddress: \"\",\n    emailAddressError: false,\n    password: \"\",\n    passwordError: false,\n    confirmPassword: \"\",\n    confirmPasswordError: false\n  };\n  const [formValues, setFormValues] = useReducer((curVals, newVals) => ({ ...curVals,\n    ...newVals\n  }), initialValues);\n  console.log(\"Start the func\");\n  const {\n    firstName,\n    firstNameError,\n    lastName,\n    lastNameError,\n    emailAddress,\n    emailAddressError,\n    password,\n    passwordError,\n    confirmPassword,\n    confirmPasswordError\n  } = formValues;\n  const [isFormSubmitted, setIsFormSubmitted] = useState(false);\n\n  function resetForm() {\n    setFormValues({\n      firstName: \"\",\n      firstNameError: false,\n      lastName: \"\",\n      lastNameError: false,\n      emailAddress: \"\",\n      emailAddressError: false,\n      password: \"\",\n      passwordError: false,\n      confirmPassword: \"\",\n      confirmPasswordError: false\n    });\n  }\n\n  useEffect(() => {\n    resetForm();\n  }, [loginIsActive]);\n\n  function handleFormChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues({\n      [name]: value\n    });\n\n    if (name === \"emailAddress\") {\n      setFormValues({\n        emailAddressError: false\n      });\n    }\n\n    if (name === \"password\") {\n      setFormValues({\n        passwordError: false\n      });\n    }\n\n    if (name === \"confirmPassword\" && !confirmPassword !== password) {\n      setFormValues({\n        confirmPasswordError: false\n      });\n    }\n\n    if (name === \"firstName\") {\n      setFormValues({\n        firstNameError: false\n      });\n    }\n\n    if (name === \"lastName\") {\n      setFormValues({\n        lastNameError: false\n      });\n    }\n  }\n\n  function submitHandler(e) {\n    e.preventDefault();\n    console.log(\"In the submit handler\");\n\n    if (!emailAddress.includes(\"@\")) {\n      setFormValues({\n        emailAddressError: true\n      });\n    }\n\n    if (password.length < 6) {\n      setFormValues({\n        passwordError: true\n      });\n    }\n\n    if (firstName.length === 0) {\n      setFormValues({\n        firstNameError: true\n      });\n    }\n\n    if (lastName.length === 0) {\n      setFormValues({\n        lastNameError: true\n      });\n    }\n\n    if (confirmPassword !== password) {\n      setFormValues({\n        confirmPasswordError: true\n      });\n    }\n\n    setIsFormSubmitted(true);\n    console.log(isFormSubmitted);\n    getUserInfoOnLogin(emailAddress, password);\n  }\n\n  useEffect(() => {\n    console.log(\"this ran\");\n    console.log(\"Was there a damn error?\", isError(formValues)); // if (isError(formValues)) {\n    //   console.log(\"there was an error\");\n    // } else {\n    //   console.log(\"there was not an error\");\n    // }\n  }, [isFormSubmitted]);\n\n  function isError(obj) {\n    Object.values(obj).forEach(val => {\n      console.log(val);\n\n      if ([val] === true) {\n        return true;\n      }\n    });\n    return false;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [!loginIsActive && /*#__PURE__*/_jsxDEV(LoginInput, {\n      type: \"text\",\n      name: \"firstName\",\n      placeholder: \"First Name\",\n      value: firstName,\n      onChange: handleFormChange,\n      classes: firstNameError ? \"input error\" : \"input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this), firstNameError && !loginIsActive && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: \"Name field required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this), !loginIsActive && /*#__PURE__*/_jsxDEV(LoginInput, {\n      type: \"text\",\n      placeholder: \"Last Name\",\n      name: \"lastName\",\n      value: lastName,\n      onChange: handleFormChange,\n      classes: firstNameError ? \"input error\" : \"input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this), lastNameError && !loginIsActive && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: \"Name field required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LoginInput, {\n      type: \"text\",\n      placeholder: \"Email Address\",\n      name: \"emailAddress\",\n      value: emailAddress,\n      onChange: handleFormChange,\n      classes: emailAddressError ? \"input error\" : \"input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), emailAddressError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: \"Valid email required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LoginInput, {\n      type: \"password\",\n      placeholder: \"Password\",\n      name: \"password\",\n      value: password,\n      onChange: handleFormChange,\n      classes: passwordError ? \"input error\" : \"input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), passwordError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: \"Password length must be at least 6 characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this), !loginIsActive && /*#__PURE__*/_jsxDEV(LoginInput, {\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: handleFormChange,\n      classes: confirmPasswordError ? \"input error\" : \"input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this), confirmPasswordError && !loginIsActive && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: \"Passwords must match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"big-btn\",\n      children: /*#__PURE__*/_jsxDEV(LoginButton, {\n        classes: \"active\",\n        children: loginIsActive ? \"Login\" : \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginFormContainer, \"i6bEPzW5gdROGG6+aDmMLp9/OKY=\");\n\n_c = LoginFormContainer;\nexport default LoginFormContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginFormContainer\");","map":{"version":3,"sources":["/Users/therealstephen/personal-projects/iou-tracker/client/src/components/LoginFormContainer.js"],"names":["React","useReducer","useEffect","useState","LoginButton","LoginInput","getUserInfoOnLogin","LoginFormContainer","loginIsActive","initialValues","firstName","firstNameError","lastName","lastNameError","emailAddress","emailAddressError","password","passwordError","confirmPassword","confirmPasswordError","formValues","setFormValues","curVals","newVals","console","log","isFormSubmitted","setIsFormSubmitted","resetForm","handleFormChange","e","name","value","target","submitHandler","preventDefault","includes","length","isError","obj","Object","values","forEach","val"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect, useState } from \"react\";\nimport LoginButton from \"../components/LoginButton\";\nimport LoginInput from \"../components/LoginInput\";\nimport getUserInfoOnLogin from \"../api/getUser\";\n\nconst LoginFormContainer = ({ loginIsActive }) => {\n  const initialValues = {\n    firstName: \"\",\n    firstNameError: false,\n    lastName: \"\",\n    lastNameError: false,\n    emailAddress: \"\",\n    emailAddressError: false,\n    password: \"\",\n    passwordError: false,\n    confirmPassword: \"\",\n    confirmPasswordError: false,\n  };\n\n  const [formValues, setFormValues] = useReducer(\n    (curVals, newVals) => ({ ...curVals, ...newVals }),\n    initialValues\n  );\n\n  console.log(\"Start the func\");\n  const {\n    firstName,\n    firstNameError,\n    lastName,\n    lastNameError,\n    emailAddress,\n    emailAddressError,\n    password,\n    passwordError,\n    confirmPassword,\n    confirmPasswordError,\n  } = formValues;\n\n  const [isFormSubmitted, setIsFormSubmitted] = useState(false);\n\n  function resetForm() {\n    setFormValues({\n      firstName: \"\",\n      firstNameError: false,\n      lastName: \"\",\n      lastNameError: false,\n      emailAddress: \"\",\n      emailAddressError: false,\n      password: \"\",\n      passwordError: false,\n      confirmPassword: \"\",\n      confirmPasswordError: false,\n    });\n  }\n\n  useEffect(() => {\n    resetForm();\n  }, [loginIsActive]);\n\n  function handleFormChange(e) {\n    const { name, value } = e.target;\n    setFormValues({ [name]: value });\n\n    if (name === \"emailAddress\") {\n      setFormValues({ emailAddressError: false });\n    }\n    if (name === \"password\") {\n      setFormValues({ passwordError: false });\n    }\n    if (name === \"confirmPassword\" && !confirmPassword !== password) {\n      setFormValues({ confirmPasswordError: false });\n    }\n    if (name === \"firstName\") {\n      setFormValues({ firstNameError: false });\n    }\n    if (name === \"lastName\") {\n      setFormValues({ lastNameError: false });\n    }\n  }\n\n  function submitHandler(e) {\n    e.preventDefault();\n    console.log(\"In the submit handler\");\n\n    if (!emailAddress.includes(\"@\")) {\n      setFormValues({ emailAddressError: true });\n    }\n    if (password.length < 6) {\n      setFormValues({ passwordError: true });\n    }\n    if (firstName.length === 0) {\n      setFormValues({ firstNameError: true });\n    }\n    if (lastName.length === 0) {\n      setFormValues({ lastNameError: true });\n    }\n    if (confirmPassword !== password) {\n      setFormValues({ confirmPasswordError: true });\n    }\n\n    setIsFormSubmitted(true);\n    console.log(isFormSubmitted);\n    getUserInfoOnLogin(emailAddress, password);\n  }\n\n  useEffect(() => {\n    console.log(\"this ran\");\n    console.log(\"Was there a damn error?\", isError(formValues));\n    // if (isError(formValues)) {\n    //   console.log(\"there was an error\");\n    // } else {\n    //   console.log(\"there was not an error\");\n    // }\n  }, [isFormSubmitted]);\n\n  function isError(obj) {\n    Object.values(obj).forEach((val) => {\n      console.log(val);\n      if ([val] === true) {\n        return true;\n      }\n    });\n    return false;\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      {!loginIsActive && (\n        <LoginInput\n          type={\"text\"}\n          name={\"firstName\"}\n          placeholder={\"First Name\"}\n          value={firstName}\n          onChange={handleFormChange}\n          classes={firstNameError ? \"input error\" : \"input\"}\n        />\n      )}\n      {firstNameError && !loginIsActive && (\n        <p className=\"error-message\">Name field required</p>\n      )}\n      {!loginIsActive && (\n        <LoginInput\n          type={\"text\"}\n          placeholder={\"Last Name\"}\n          name={\"lastName\"}\n          value={lastName}\n          onChange={handleFormChange}\n          classes={firstNameError ? \"input error\" : \"input\"}\n        />\n      )}\n      {lastNameError && !loginIsActive && (\n        <p className=\"error-message\">Name field required</p>\n      )}\n\n      <LoginInput\n        type={\"text\"}\n        placeholder={\"Email Address\"}\n        name={\"emailAddress\"}\n        value={emailAddress}\n        onChange={handleFormChange}\n        classes={emailAddressError ? \"input error\" : \"input\"}\n      />\n      {emailAddressError && (\n        <p className=\"error-message\">Valid email required</p>\n      )}\n      <LoginInput\n        type={\"password\"}\n        placeholder={\"Password\"}\n        name={\"password\"}\n        value={password}\n        onChange={handleFormChange}\n        classes={passwordError ? \"input error\" : \"input\"}\n      />\n      {passwordError && (\n        <p className=\"error-message\">\n          Password length must be at least 6 characters\n        </p>\n      )}\n      {!loginIsActive && (\n        <LoginInput\n          type={\"password\"}\n          placeholder={\"Confirm Password\"}\n          name={\"confirmPassword\"}\n          value={confirmPassword}\n          onChange={handleFormChange}\n          classes={confirmPasswordError ? \"input error\" : \"input\"}\n        />\n      )}\n      {confirmPasswordError && !loginIsActive && (\n        <p className=\"error-message\">Passwords must match</p>\n      )}\n\n      <div className=\"big-btn\">\n        <LoginButton classes={\"active\"}>\n          {loginIsActive ? \"Login\" : \"Signup\"}\n        </LoginButton>\n      </div>\n    </form>\n  );\n};\n\nexport default LoginFormContainer;\n"]},"metadata":{},"sourceType":"module"}