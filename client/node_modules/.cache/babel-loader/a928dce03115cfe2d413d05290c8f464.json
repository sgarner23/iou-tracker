{"ast":null,"code":"import _slicedToArray from\"/Users/therealstephen/personal-projects/iou-tracker-client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useContext,useState,useEffect}from\"react\";import{invoiceContext}from\"../store/invoiceStore\";import LineItem from\"./LineItem\";import\"./LineItemDetails.css\";import numberWithCommas from\"../helpers/formatNumber\";import getLineItems from\"../api/getLineItem\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function LineItemDetails(){var _useContext=useContext(invoiceContext),invoiceState=_useContext.invoiceState,updateInvoice=_useContext.updateInvoice;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),lineItemsList=_useState2[0],setLineItemsList=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),subtotal=_useState4[0],setSubtotal=_useState4[1];//The useEffects below are to update line items and formatting after the component mounts\nuseEffect(function(){if(invoiceState.currentInvoiceID){var lineItems=getLineItems(invoiceState.currentInvoiceID);lineItems.then(function(res){setLineItemsList(res.lineItems);});}},[invoiceState.currentInvoiceID]);useEffect(function(){if(invoiceState.selectedInvoice.subtotal){setSubtotal(numberWithCommas(invoiceState.selectedInvoice.subtotal));}},[invoiceState.selectedInvoice.subtotal]);return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"line-item-container\",children:lineItemsList.map(function(line,index){return/*#__PURE__*/_jsx(LineItem,{itemName:line.item_name,quantity:line.quantity,unitPrice:line.unit_price,subtotal:line.subtotal},index);})}),/*#__PURE__*/_jsx(\"div\",{className:\"grand-total-wrapper\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"grand-total\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"grand-total-text\",children:\"Grand Total\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"total-price\",children:[\"$ \",subtotal]})]})})]});}export default LineItemDetails;","map":{"version":3,"sources":["/Users/therealstephen/personal-projects/iou-tracker-client/src/components/LineItemDetails.js"],"names":["React","Fragment","useContext","useState","useEffect","invoiceContext","LineItem","numberWithCommas","getLineItems","LineItemDetails","invoiceState","updateInvoice","lineItemsList","setLineItemsList","subtotal","setSubtotal","currentInvoiceID","lineItems","then","res","selectedInvoice","map","line","index","item_name","quantity","unit_price"],"mappings":"6IAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,CAAsCC,QAAtC,CAAgDC,SAAhD,KAAiE,OAAjE,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAO,uBAAP,CACA,MAAOC,CAAAA,gBAAP,KAA6B,yBAA7B,CACA,MAAOC,CAAAA,YAAP,KAAyB,oBAAzB,C,wFAEA,QAASC,CAAAA,eAAT,EAA2B,CACzB,gBAAwCP,UAAU,CAACG,cAAD,CAAlD,CAAQK,YAAR,aAAQA,YAAR,CAAsBC,aAAtB,aAAsBA,aAAtB,CACA,cAA0CR,QAAQ,CAAC,EAAD,CAAlD,wCAAOS,aAAP,eAAsBC,gBAAtB,eACA,eAAgCV,QAAQ,CAAC,CAAD,CAAxC,yCAAOW,QAAP,eAAiBC,WAAjB,eAEA;AACAX,SAAS,CAAC,UAAM,CACd,GAAIM,YAAY,CAACM,gBAAjB,CAAmC,CACjC,GAAMC,CAAAA,SAAS,CAAGT,YAAY,CAACE,YAAY,CAACM,gBAAd,CAA9B,CACAC,SAAS,CAACC,IAAV,CAAe,SAACC,GAAD,CAAS,CACtBN,gBAAgB,CAACM,GAAG,CAACF,SAAL,CAAhB,CACD,CAFD,EAGD,CACF,CAPQ,CAON,CAACP,YAAY,CAACM,gBAAd,CAPM,CAAT,CASAZ,SAAS,CAAC,UAAM,CACd,GAAIM,YAAY,CAACU,eAAb,CAA6BN,QAAjC,CAA2C,CACzCC,WAAW,CAACR,gBAAgB,CAACG,YAAY,CAACU,eAAb,CAA6BN,QAA9B,CAAjB,CAAX,CACD,CACF,CAJQ,CAIN,CAACJ,YAAY,CAACU,eAAb,CAA6BN,QAA9B,CAJM,CAAT,CAMA,mBACE,MAAC,KAAD,CAAO,QAAP,yBACE,YAAK,SAAS,CAAC,qBAAf,UACGF,aAAa,CAACS,GAAd,CAAkB,SAACC,IAAD,CAAOC,KAAP,CAAiB,CAClC,mBACE,KAAC,QAAD,EAEE,QAAQ,CAAED,IAAI,CAACE,SAFjB,CAGE,QAAQ,CAAEF,IAAI,CAACG,QAHjB,CAIE,SAAS,CAAEH,IAAI,CAACI,UAJlB,CAKE,QAAQ,CAAEJ,IAAI,CAACR,QALjB,EACOS,KADP,CADF,CASD,CAVA,CADH,EADF,cAcE,YAAK,SAAS,CAAC,qBAAf,uBACE,aAAK,SAAS,CAAC,aAAf,wBACE,UAAG,SAAS,CAAC,kBAAb,yBADF,cAEE,WAAG,SAAS,CAAC,aAAb,gBAA8BT,QAA9B,GAFF,GADF,EAdF,GADF,CAuBD,CAED,cAAeL,CAAAA,eAAf","sourcesContent":["import React, { Fragment, useContext, useState, useEffect } from \"react\";\nimport { invoiceContext } from \"../store/invoiceStore\";\nimport LineItem from \"./LineItem\";\nimport \"./LineItemDetails.css\";\nimport numberWithCommas from \"../helpers/formatNumber\";\nimport getLineItems from \"../api/getLineItem\";\n\nfunction LineItemDetails() {\n  const { invoiceState, updateInvoice } = useContext(invoiceContext);\n  const [lineItemsList, setLineItemsList] = useState([]);\n  const [subtotal, setSubtotal] = useState(0);\n\n  //The useEffects below are to update line items and formatting after the component mounts\n  useEffect(() => {\n    if (invoiceState.currentInvoiceID) {\n      const lineItems = getLineItems(invoiceState.currentInvoiceID);\n      lineItems.then((res) => {\n        setLineItemsList(res.lineItems);\n      });\n    }\n  }, [invoiceState.currentInvoiceID]);\n\n  useEffect(() => {\n    if (invoiceState.selectedInvoice.subtotal) {\n      setSubtotal(numberWithCommas(invoiceState.selectedInvoice.subtotal));\n    }\n  }, [invoiceState.selectedInvoice.subtotal]);\n\n  return (\n    <React.Fragment>\n      <div className=\"line-item-container\">\n        {lineItemsList.map((line, index) => {\n          return (\n            <LineItem\n              key={index}\n              itemName={line.item_name}\n              quantity={line.quantity}\n              unitPrice={line.unit_price}\n              subtotal={line.subtotal}\n            />\n          );\n        })}\n      </div>\n      <div className=\"grand-total-wrapper\">\n        <div className=\"grand-total\">\n          <p className=\"grand-total-text\">Grand Total</p>\n          <p className=\"total-price\">$ {subtotal}</p>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default LineItemDetails;\n"]},"metadata":{},"sourceType":"module"}