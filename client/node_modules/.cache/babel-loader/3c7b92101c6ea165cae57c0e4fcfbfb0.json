{"ast":null,"code":"var _jsxFileName = \"/Users/therealstephen/personal-projects/iou-tracker/client/src/store/lineItemStore.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  quanity: \"\",\n  unitPrice: \"\",\n  itemName: \"\",\n  subtotal: \"\"\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"itemName\":\n      {\n        return { ...state,\n          itemName: action.value\n        };\n      }\n\n    case \"quanity\":\n      {\n        return { ...state,\n          quanity: +action.value\n        };\n      }\n\n    case \"unitPrice\":\n      {\n        let string1 = \"126.55\";\n        let string2 = \"200.63\";\n        console.log(+string1 + +string2);\n        return { ...state,\n          unitPrice: action.value\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const lineItemContext = /*#__PURE__*/createContext(initialState);\nexport const LineItemStore = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [lineItemState, updateLineItem] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(lineItemContext.Provider, {\n    value: {\n      lineItemState,\n      updateLineItem\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LineItemStore, \"WqvrNRnWKrDhzf+SD+hmPKRK7FA=\");\n\n_c = LineItemStore;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineItemStore\");","map":{"version":3,"sources":["/Users/therealstephen/personal-projects/iou-tracker/client/src/store/lineItemStore.js"],"names":["React","createContext","useReducer","initialState","quanity","unitPrice","itemName","subtotal","reducer","state","action","type","value","string1","string2","console","log","lineItemContext","LineItemStore","children","lineItemState","updateLineItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,SAAS,EAAE,EAFQ;AAGnBC,EAAAA,QAAQ,EAAE,EAHS;AAInBC,EAAAA,QAAQ,EAAE;AAJS,CAArB;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AAAiB;AACf,eAAO,EACL,GAAGF,KADE;AAELH,UAAAA,QAAQ,EAAEI,MAAM,CAACE;AAFZ,SAAP;AAID;;AAED,SAAK,SAAL;AAAgB;AACd,eAAO,EACL,GAAGH,KADE;AAELL,UAAAA,OAAO,EAAE,CAACM,MAAM,CAACE;AAFZ,SAAP;AAID;;AAED,SAAK,WAAL;AAAkB;AAChB,YAAIC,OAAO,GAAG,QAAd;AACA,YAAIC,OAAO,GAAG,QAAd;AAEAC,QAAAA,OAAO,CAACC,GAAR,CAAY,CAACH,OAAD,GAAW,CAACC,OAAxB;AACA,eAAO,EACL,GAAGL,KADE;AAELJ,UAAAA,SAAS,EAAEK,MAAM,CAACE;AAFb,SAAP;AAID;;AAED;AACE,aAAOH,KAAP;AA3BJ;AA6BD,CA9BD;;AAgCA,OAAO,MAAMQ,eAAe,gBAAGhB,aAAa,CAACE,YAAD,CAArC;AAEP,OAAO,MAAMe,aAAa,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC7C,QAAM,CAACC,aAAD,EAAgBC,cAAhB,IAAkCnB,UAAU,CAACM,OAAD,EAAUL,YAAV,CAAlD;AAEA,sBACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAEiB,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,KAAjC;AAAA,cACGF;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CARM;;GAAMD,a;;KAAAA,a","sourcesContent":["import React, { createContext, useReducer } from \"react\";\n\nconst initialState = {\n  quanity: \"\",\n  unitPrice: \"\",\n  itemName: \"\",\n  subtotal: \"\",\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"itemName\": {\n      return {\n        ...state,\n        itemName: action.value,\n      };\n    }\n\n    case \"quanity\": {\n      return {\n        ...state,\n        quanity: +action.value,\n      };\n    }\n\n    case \"unitPrice\": {\n      let string1 = \"126.55\";\n      let string2 = \"200.63\";\n\n      console.log(+string1 + +string2);\n      return {\n        ...state,\n        unitPrice: action.value,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport const lineItemContext = createContext(initialState);\n\nexport const LineItemStore = ({ children }) => {\n  const [lineItemState, updateLineItem] = useReducer(reducer, initialState);\n\n  return (\n    <lineItemContext.Provider value={{ lineItemState, updateLineItem }}>\n      {children}\n    </lineItemContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}