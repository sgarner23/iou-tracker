{"ast":null,"code":"import React,{useContext}from\"react\";import{useParams}from\"react-router\";import{invoiceContext}from\"../../../../store/invoiceStore\";import icon_arrow_down from\"../../../../assets/icon_arrow_down.svg\";import\"./InvoiceDetails.css\";import PaymentTerms from\"./PaymentTerms\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function InvoiceDetails(){var _useContext=useContext(invoiceContext),invoiceState=_useContext.invoiceState,updateInvoice=_useContext.updateInvoice;var _useParams=useParams(),id=_useParams.id;var day=\"\";var currentOrderDate=[];if(invoiceState.selectedInvoice.order_date){currentOrderDate=invoiceState.selectedInvoice.order_date.split(\"-\");}//Reformatting the date to meet required format, \"yyyy-mm-dd\"\nfunction formatDate(date){if(!invoiceState.selectedInvoice.order_date){return\"\";}for(var i=0;i<date[2].length;i++){if(i>1){break;}day+=date[2].charAt(i);}date[2]=day;return date=date.join(\"-\");}//Updates global state on payment terms that's later used to store in DB\nfunction clickPaymentTermsHandler(){updateInvoice({type:\"SELECT_PAYMENT_TERMS\"});}//Function used on form and reusable accross all fields by referencing the \"name\" property\n//Global state is updated in real time\nfunction formChangeHandler(e){updateInvoice({type:e.target.name,value:e.target.value});}return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"input-container invoice-detail-container\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"invoice-date\",className:\"label bill-to-label\",children:\"Invoice Date\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",className:\"invoice-input bill-to-input date-input\",name:\"invoiceDate\",onChange:formChangeHandler,value:invoiceState.selectedInvoice.order_date&&formatDate(currentOrderDate)}),id?null:/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"payment-terms\",className:\"label bill-to-label\",children:\"Payment Terms\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"invoice-input bill-to-input date-input select-dropdown\",name:\"payment-terms\",children:[invoiceState.displayMessage,/*#__PURE__*/_jsx(\"img\",{src:icon_arrow_down,alt:\"down-arrow\",className:\"invoice-down-arrow\",onClick:clickPaymentTermsHandler})]}),invoiceState.paymentTermOptions&&/*#__PURE__*/_jsx(PaymentTerms,{})]}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"project-description\",className:\"label bill-to-label\",children:\"Project Description\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"invoice-input bill-to-input date-input\",name:\"projectDescription\",onChange:formChangeHandler,value:invoiceState.selectedInvoice?invoiceState.selectedInvoice.project_type:invoiceState.projectDescription})]})});}export default InvoiceDetails;","map":{"version":3,"sources":["/Users/therealstephen/personal-projects/iou-tracker-client/src/components/UI/Modals/New-Invoice-Modal/InvoiceDetails.js"],"names":["React","useContext","useParams","invoiceContext","PaymentTerms","InvoiceDetails","invoiceState","updateInvoice","id","day","currentOrderDate","selectedInvoice","order_date","split","formatDate","date","i","length","charAt","join","clickPaymentTermsHandler","type","formChangeHandler","e","target","name","value","displayMessage","icon_arrow_down","paymentTermOptions","project_type","projectDescription"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { useParams } from \"react-router\";\nimport { invoiceContext } from \"../../../../store/invoiceStore\";\nimport icon_arrow_down from \"../../../../assets/icon_arrow_down.svg\";\nimport \"./InvoiceDetails.css\";\nimport PaymentTerms from \"./PaymentTerms\";\n\nfunction InvoiceDetails() {\n  const { invoiceState, updateInvoice } = useContext(invoiceContext);\n  const { id } = useParams();\n\n  let day = \"\";\n  let currentOrderDate = [];\n\n  if (invoiceState.selectedInvoice.order_date) {\n    currentOrderDate = invoiceState.selectedInvoice.order_date.split(\"-\");\n  }\n\n  //Reformatting the date to meet required format, \"yyyy-mm-dd\"\n  function formatDate(date) {\n    if (!invoiceState.selectedInvoice.order_date) {\n      return \"\";\n    }\n    for (let i = 0; i < date[2].length; i++) {\n      if (i > 1) {\n        break;\n      }\n      day += date[2].charAt(i);\n    }\n    date[2] = day;\n    return (date = date.join(\"-\"));\n  }\n\n  //Updates global state on payment terms that's later used to store in DB\n  function clickPaymentTermsHandler() {\n    updateInvoice({ type: \"SELECT_PAYMENT_TERMS\" });\n  }\n\n  //Function used on form and reusable accross all fields by referencing the \"name\" property\n  //Global state is updated in real time\n  function formChangeHandler(e) {\n    updateInvoice({ type: e.target.name, value: e.target.value });\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"input-container invoice-detail-container\">\n        <label htmlFor=\"invoice-date\" className=\"label bill-to-label\">\n          Invoice Date\n        </label>\n        <input\n          type=\"date\"\n          className=\"invoice-input bill-to-input date-input\"\n          name=\"invoiceDate\"\n          onChange={formChangeHandler}\n          value={\n            invoiceState.selectedInvoice.order_date &&\n            formatDate(currentOrderDate)\n          }\n        />\n\n        {/* Users are only allowed to edit certain details once an invoice is submitted */}\n        {id ? null : (\n          <React.Fragment>\n            <label htmlFor=\"payment-terms\" className=\"label bill-to-label\">\n              Payment Terms\n            </label>\n            <div\n              className=\"invoice-input bill-to-input date-input select-dropdown\"\n              name=\"payment-terms\"\n            >\n              {invoiceState.displayMessage}\n              <img\n                src={icon_arrow_down}\n                alt=\"down-arrow\"\n                className=\"invoice-down-arrow\"\n                onClick={clickPaymentTermsHandler}\n              />\n            </div>\n            {invoiceState.paymentTermOptions && <PaymentTerms />}\n          </React.Fragment>\n        )}\n        <label htmlFor=\"project-description\" className=\"label bill-to-label\">\n          Project Description\n        </label>\n        <input\n          type=\"text\"\n          className=\"invoice-input bill-to-input date-input\"\n          name=\"projectDescription\"\n          onChange={formChangeHandler}\n          value={\n            invoiceState.selectedInvoice\n              ? invoiceState.selectedInvoice.project_type\n              : invoiceState.projectDescription\n          }\n        />\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default InvoiceDetails;\n"]},"metadata":{},"sourceType":"module"}