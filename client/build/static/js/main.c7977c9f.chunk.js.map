{"version":3,"sources":["store/userStore.js","components/UI/Card.js","components/UI/LoginButton.js","components/LoginInput.js","api/getUser.js","api/createUser.js","components/UI/Loader.js","components/LoginFormContainer.js","components/UI/Modals/SignupModal.js","pages/Login.js","assets/avatar.svg","assets/logo.svg","components/Header.js","assets/icon_plus.svg","components/FilterAddBar.js","store/invoiceStore.js","helpers/formatNumber.js","components/UI/StatusDiv.js","components/UI/Invoice-Card/DateStatusAndAmount.js","components/UI/Invoice-Card/InvoiceAndName.js","components/UI/Invoice-Card/InvoiceCard.js","store/lineItemStore.js","components/UI/Modals/New-Invoice-Modal/BillFrom.js","components/UI/Modals/New-Invoice-Modal/BillTo.js","assets/icon_arrow_down.svg","components/UI/Modals/New-Invoice-Modal/PaymentTerms.js","components/UI/Modals/New-Invoice-Modal/InvoiceDetails.js","assets/icon_delete.svg","components/UI/Modals/New-Invoice-Modal/ItemInForm.js","components/InvoiceFooter.js","api/createInvoice.js","api/editInvoice.js","assets/icon_arrow_left.svg","components/GoBack.js","components/UI/Modals/New-Invoice-Modal/InvoiceModal.js","api/getInvoices.js","assets/illustration_empty.svg","pages/Profile.js","components/LineItem.js","api/getLineItem.js","components/LineItemDetails.js","api/markAsPaid.js","api/deleteInvoice.js","components/UI/Modals/DeleteModal.js","pages/Invoice.js","helpers/getDataFromSession.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","user","usersInvoices","modalToDisplay","numOfUserInvoices","reducer","state","action","type","value","userContext","createContext","UserStore","children","useReducer","dispatch","Provider","Card","classes","className","LoginButton","onSubmit","onClick","LoginInput","props","email","password","a","axios","post","process","res","sessionStorage","setItem","data","accessToken","JSON","stringify","console","log","getUserInfoOnLogin","firstName","lastName","createNewUser","Loader","LoginFormContainer","loginIsActive","setLoginIsActive","useContext","useState","isLoading","setIsLoading","loginNotSuccessful","setLoginNotSuccessful","navigate","useNavigate","curVals","newVals","firstNameError","lastNameError","emailAddress","emailAddressError","passwordError","confirmPassword","confirmPasswordError","formValues","setFormValues","handleFormChange","e","target","name","preventDefault","isLoginError","signUpError","includes","length","userInfo","useEffect","placeholder","onChange","SignupModal","src","alt","Login","clickHandler","textContent","Header","showLogoutBox","setShowLogoutBox","logo","avatar","window","removeItem","FilterAddBar","loading","icon_plus","paymentTermOptions","userStreetAddress","userCity","userState","userZipCode","userCountry","clientName","clientEmail","clientStreetAddress","clientCity","clientState","clientZipCode","clientCountry","invoiceDate","displayMessage","numOfDays","projectDescription","currentInvoiceID","selectedInvoice","editingInvoice","editedInvoice","Object","keys","user_street_address","user_city","user_state","user_zip","user_country","client_name","client_email","client_street_address","client_city","client_state","client_zip","client_country","order_date","project_type","invoiceContext","InvoiceStore","invoiceState","updateInvoice","numberWithCommas","x","toString","replace","StatusDiv","invoiceStatus","Fragment","DateStatusAndAmount","dueDate","total","toFixed","InvoiceAndName","number","InvoiceCard","lineItems","quantity","unitPrice","itemName","subtotal","arrOfLineItems","index","updatedLineItems","splice","lineItemContext","LineItemStore","lineItemState","updateLineItem","BillFrom","formChangeHandler","htmlFor","city","BillTo","PaymentTerms","purple","setPurple","id","updatePaymentTerms","InvoiceDetails","useParams","day","currentOrderDate","split","date","i","charAt","join","formatDate","icon_arrow_down","ItemInForm","min","icon_delete","InvoiceFooter","getItem","apiUrl","authAxios","create","baseURL","headers","access_token","createNewInvoice","put","editInvoice","GoBack","icon_arrow_left","InvoiceModal","listOfLineItems","map","line","submitInvoice","status","get","allInvoices","getUserInvoices","Profile","noInvoices","setNoInvoices","setLoading","invoiceListState","setInvoiceListState","then","userInvoices","invoice","is_paid","payment_date","illustration_empty","LineItem","invoiceID","getLineItems","LineItemDetails","lineItemsList","setLineItemsList","setSubtotal","item_name","unit_price","paid","delete","invoiceDelete","DeleteModal","selectedInvoiceID","Invoice","orderDate","setOrderDate","forEach","Date","dateMiliSecs","parse","dateArr","toDateString","persistUserLogin","App","location","useLocation","pathname","path","element","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7977c9f.chunk.js","sourcesContent":["import React, { createContext, useReducer } from \"react\";\n\nconst initialState = {\n  user: null,\n  usersInvoices: null,\n  modalToDisplay: null,\n  numOfUserInvoices: null,\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"USER_LOGGED_IN\": {\n      return {\n        ...state,\n        user: action.value,\n      };\n    }\n\n    case \"USER_CREATED\": {\n      return {\n        ...state,\n        modalToDisplay: \"userCreated\",\n      };\n    }\n\n    case \"USERS_INVOICES\": {\n      return {\n        ...state,\n        usersInvoices: action.value,\n      };\n    }\n\n    case \"NEW_INVOICE_MODAL\": {\n      return {\n        ...state,\n        modalToDisplay: \"newInvoice\",\n      };\n    }\n\n    case \"EDIT_INVOICE_MODAL\": {\n      return {\n        ...state,\n        modalToDisplay: \"editInvoice\",\n      };\n    }\n\n    case \"DELETE_INVOICE_MODAL\": {\n      return {\n        ...state,\n        modalToDisplay: \"deleteInvoice\",\n      };\n    }\n\n    case \"CLOSE_MODAL\": {\n      return {\n        ...state,\n        modalToDisplay: null,\n      };\n    }\n\n    case \"NUM_OF_INVOICES\": {\n      return {\n        ...state,\n        numOfUserInvoices: action.value,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport const userContext = createContext(initialState);\n\nexport const UserStore = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <userContext.Provider value={{ state, dispatch }}>\n      {children}\n    </userContext.Provider>\n  );\n};\n","import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = ({ children, classes }) => {\n  return <div className={classes}>{children}</div>;\n};\n\nexport default Card;\n","import React from \"react\";\nimport \"./LoginButton.css\";\n\nconst LoginButton = ({ onSubmit, children, classes, onClick }) => {\n  return (\n    <button className={classes} onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nexport default LoginButton;\n","import React from \"react\";\nimport \"./LoginInput.css\";\n\nconst LoginInput = (props) => {\n  return <input {...props} className={props.classes} />;\n};\n\nexport default LoginInput;\n","import axios from \"axios\";\n\nasync function getUserInfoOnLogin(email, password) {\n  try {\n    const res = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/login`, {\n      email,\n      password,\n    });\n\n    //placing accessToken and userData in session storage for future api calls due to protected endpoints\n    sessionStorage.setItem(\"accessToken\", res.data.accessToken);\n    sessionStorage.setItem(\"userData\", JSON.stringify(res.data.user));\n\n    return res.data.user;\n  } catch (error) {\n    console.log(error);\n    return;\n  }\n}\n\nexport default getUserInfoOnLogin;\n","import axios from \"axios\";\n\nasync function createNewUser(firstName, lastName, email, password) {\n  try {\n    const res = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/user`, {\n      firstName,\n      lastName,\n      email,\n      password,\n    });\n  } catch (error) {\n    console.log(error);\n    return;\n  }\n}\n\nexport default createNewUser;\n","import React from \"react\";\nimport \"./Loader.css\";\n\n//Loader used on sign in and sign up\nfunction Loader() {\n  return (\n    <div className=\"loader\">\n      <div className=\"one\"></div>\n      <div className=\"two\"></div>\n      <div className=\"three\"></div>\n    </div>\n  );\n}\n\nexport default Loader;\n","import React, { useReducer, useEffect, useContext, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { userContext } from \"../store/userStore\";\n\nimport LoginButton from \"./UI/LoginButton\";\nimport LoginInput from \"../components/LoginInput\";\n\nimport getUserInfoOnLogin from \"../api/getUser\";\nimport createNewUser from \"../api/createUser\";\nimport Loader from \"./UI/Loader\";\n\nconst LoginFormContainer = ({ loginIsActive, setLoginIsActive }) => {\n  const { state, dispatch } = useContext(userContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const [loginNotSuccessful, setLoginNotSuccessful] = useState(null);\n  const navigate = useNavigate();\n\n  //Login form state\n  const initialValues = {\n    firstName: \"\",\n    firstNameError: false,\n    lastName: \"\",\n    lastNameError: false,\n    emailAddress: \"\",\n    emailAddressError: false,\n    password: \"\",\n    passwordError: false,\n    confirmPassword: \"\",\n    confirmPasswordError: false,\n  };\n\n  const [formValues, setFormValues] = useReducer(\n    (curVals, newVals) => ({ ...curVals, ...newVals }),\n    initialValues\n  );\n\n  const {\n    firstName,\n    firstNameError,\n    lastName,\n    lastNameError,\n    emailAddress,\n    emailAddressError,\n    password,\n    passwordError,\n    confirmPassword,\n    confirmPasswordError,\n  } = formValues;\n\n  //Resets the form when user toggles between login and sign up so fields are blank\n  function resetForm() {\n    setFormValues({\n      firstName: \"\",\n      firstNameError: false,\n      lastName: \"\",\n      lastNameError: false,\n      emailAddress: \"\",\n      emailAddressError: false,\n      password: \"\",\n      passwordError: false,\n      confirmPassword: \"\",\n      confirmPasswordError: false,\n    });\n  }\n\n  //Calls the reset function each time the user clicks on Login or Sign up\n  useEffect(() => {\n    resetForm();\n    setLoginNotSuccessful(null);\n  }, [loginIsActive]);\n\n  //Logic for form state and error state\n  function handleFormChange(e) {\n    setLoginNotSuccessful(null);\n    const { name, value } = e.target;\n    setFormValues({ [name]: value });\n\n    if (name === \"emailAddress\") {\n      setFormValues({ emailAddressError: false });\n    }\n    if (name === \"password\") {\n      setFormValues({ passwordError: false });\n    }\n    if (name === \"confirmPassword\" && !confirmPassword !== password) {\n      setFormValues({ confirmPasswordError: false });\n    }\n    if (name === \"firstName\") {\n      setFormValues({ firstNameError: false });\n    }\n    if (name === \"lastName\") {\n      setFormValues({ lastNameError: false });\n    }\n  }\n\n  //Determines if fields were correctly filled out\n  async function submitHandler(e) {\n    e.preventDefault();\n    let isLoginError = false;\n    let signUpError = false;\n\n    if (!emailAddress.includes(\"@\")) {\n      setFormValues({ emailAddressError: true });\n      isLoginError = true;\n    }\n    if (password.length < 6) {\n      setFormValues({ passwordError: true });\n      isLoginError = true;\n    }\n    if (firstName.length === 0) {\n      setFormValues({ firstNameError: true });\n      signUpError = true;\n    }\n    if (lastName.length === 0) {\n      setFormValues({ lastNameError: true });\n      signUpError = true;\n    }\n    if (confirmPassword !== password) {\n      setFormValues({ confirmPasswordError: true });\n      signUpError = true;\n    }\n\n    if (!isLoginError && loginIsActive) {\n      setIsLoading(true);\n      const userInfo = await getUserInfoOnLogin(emailAddress, password);\n\n      if (userInfo) {\n        dispatch({\n          type: \"USER_LOGGED_IN\",\n          value: userInfo,\n        });\n        navigate(\"/profile\");\n      } else {\n        setLoginNotSuccessful(true);\n        setIsLoading(false);\n      }\n    } else if (!signUpError && !loginIsActive) {\n      setIsLoading(true);\n      await createNewUser(firstName, lastName, emailAddress, password);\n      dispatch({\n        type: \"USER_CREATED\",\n      });\n      setIsLoading(false);\n      setLoginIsActive(true);\n    }\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      {!loginIsActive && (\n        <LoginInput\n          type={\"text\"}\n          name={\"firstName\"}\n          placeholder={\"First Name\"}\n          value={firstName}\n          onChange={handleFormChange}\n          classes={firstNameError ? \"input error\" : \"input\"}\n        />\n      )}\n      {firstNameError && !loginIsActive && (\n        <p className=\"error-message\">Name field required</p>\n      )}\n      {!loginIsActive && (\n        <LoginInput\n          type={\"text\"}\n          placeholder={\"Last Name\"}\n          name={\"lastName\"}\n          value={lastName}\n          onChange={handleFormChange}\n          classes={firstNameError ? \"input error\" : \"input\"}\n        />\n      )}\n      {lastNameError && !loginIsActive && (\n        <p className=\"error-message\">Name field required</p>\n      )}\n\n      <LoginInput\n        type={\"text\"}\n        placeholder={\"Email Address\"}\n        name={\"emailAddress\"}\n        value={emailAddress}\n        onChange={handleFormChange}\n        classes={emailAddressError ? \"input error\" : \"input\"}\n      />\n      {emailAddressError && (\n        <p className=\"error-message\">Valid email required</p>\n      )}\n      <LoginInput\n        type={\"password\"}\n        placeholder={\"Password\"}\n        name={\"password\"}\n        value={password}\n        onChange={handleFormChange}\n        classes={passwordError ? \"input error\" : \"input\"}\n      />\n      {passwordError && (\n        <p className=\"error-message\">\n          Password length must be at least 6 characters\n        </p>\n      )}\n      {!loginIsActive && (\n        <LoginInput\n          type={\"password\"}\n          placeholder={\"Confirm Password\"}\n          name={\"confirmPassword\"}\n          value={confirmPassword}\n          onChange={handleFormChange}\n          classes={confirmPasswordError ? \"input error\" : \"input\"}\n        />\n      )}\n      {confirmPasswordError && !loginIsActive && (\n        <p className=\"error-message\">Passwords must match</p>\n      )}\n\n      <div className=\"big-btn\">\n        <LoginButton classes={\"active\"}>\n          {loginIsActive ? \"Login\" : \"Signup\"} {isLoading && <Loader />}\n        </LoginButton>\n        {loginNotSuccessful && loginIsActive && (\n          <p className=\"error-message\">Error: email or password incorrect</p>\n        )}\n      </div>\n    </form>\n  );\n};\n\nexport default LoginFormContainer;\n","import React, { useContext } from \"react\";\nimport { userContext } from \"../../../store/userStore\";\nimport LoginButton from \"../LoginButton\";\nimport \"./SignupModal.css\";\n\nfunction SignupModal() {\n  const { state, dispatch } = useContext(userContext);\n\n  function clickHandler() {\n    dispatch({\n      type: \"CLOSE_MODAL\",\n    });\n  }\n\n  return (\n    <div className=\"overlay\">\n      <div className=\"card\">\n        <p className=\"success-message\">\n          Thanks! Your account has been created successfully!\n        </p>\n        <img\n          src=\"https://media.giphy.com/media/s2qXK8wAvkHTO/giphy.gif\"\n          alt=\"celebration\"\n          className=\"giphy\"\n        />\n        <p className=\"login-instructions\">\n          You have been redirected to the login page. Please login to continue!\n        </p>\n        <LoginButton classes={\"active smaller-btn\"} onClick={clickHandler}>\n          OK\n        </LoginButton>\n      </div>\n    </div>\n  );\n}\n\nexport default SignupModal;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { userContext } from \"../store/userStore\";\n\nimport Card from \"../components/UI/Card\";\nimport LoginButton from \"../components/UI/LoginButton\";\nimport LoginFormContainer from \"../components/LoginFormContainer\";\n\nimport \"./Login.css\";\nimport SignupModal from \"../components/UI/Modals/SignupModal\";\n\nconst Login = () => {\n  const { state, dispatch } = useContext(userContext);\n  const [loginIsActive, setLoginIsActive] = useState(true);\n\n  //Displaying the login or sign up form based on which button is clicked\n  function clickHandler(e) {\n    if (e.target.textContent === \"Login\" && !loginIsActive) {\n      setLoginIsActive(true);\n    } else if (\n      e.target.textContent === \"Signup\" ||\n      e.target.textContent === \"Signup now\"\n    ) {\n      setLoginIsActive(false);\n    }\n  }\n\n  return (\n    <div className=\"login-page\">\n      <Card classes={\"card-wrapper\"}>\n        {state.modalToDisplay === \"userCreated\" && <SignupModal />}\n        <h1>{loginIsActive ? \"Login Form\" : \"Signup Form\"}</h1>\n        <div className=\"login-btns-container\">\n          <div className=\"btn-container\" onClick={clickHandler}>\n            <LoginButton classes={loginIsActive ? \"active\" : \"not-active\"}>\n              Login\n            </LoginButton>\n          </div>\n          <div className=\"btn-container\" onClick={clickHandler}>\n            <LoginButton classes={loginIsActive ? \"not-active\" : \"active\"}>\n              Signup\n            </LoginButton>\n          </div>\n        </div>\n        <LoginFormContainer\n          loginIsActive={loginIsActive}\n          setLoginIsActive={setLoginIsActive}\n        />\n        <div className=\"bottom-text\">\n          <p>Not a member?</p>{\" \"}\n          <p className=\"signup-text\" onClick={clickHandler}>\n            Signup now\n          </p>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/avatar.5d2eead8.svg\";","export default __webpack_public_path__ + \"static/media/logo.e8c9e71e.svg\";","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport avatar from \"../assets/avatar.svg\";\nimport logo from \"../assets/logo.svg\";\nimport \"./Header.css\";\n\nfunction Header() {\n  const [showLogoutBox, setShowLogoutBox] = useState(false);\n  const navigate = useNavigate();\n\n  //Toggles logout div on and off\n  function displayLogoutBox() {\n    setShowLogoutBox(!showLogoutBox);\n  }\n\n  //Removes their access token and data then they're redirected to the login page and all views will be restricted until login is completed again.\n  function logoutUser() {\n    window.sessionStorage.removeItem(\"accessToken\");\n    window.sessionStorage.removeItem(\"userData\");\n    navigate(\"/login\");\n  }\n  return (\n    <div className=\"header-container\">\n      <div className=\"header-icon-container\">\n        <div className=\"background-div\"></div>\n        <div className=\"light-dark-container\">\n          <div className=\"dark-box\"></div>\n          <div className=\"light-box\"></div>\n        </div>\n        <img src={logo} alt=\"logo\" className=\"logo\" />\n      </div>\n\n      <div className=\"middle-header-container\"></div>\n      <div onClick={displayLogoutBox} className=\"profile-pic-container\">\n        <img src={avatar} alt=\"profile picture\" className=\"profile-picture\" />\n        {showLogoutBox && (\n          <div className=\"logout-container\">\n            <p onClick={logoutUser} className=\"logout-text\">\n              Logout\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/icon_plus.278c048a.svg\";","import React, { useContext } from \"react\";\nimport { userContext } from \"../store/userStore\";\nimport icon_plus from \"../assets/icon_plus.svg\";\nimport LoginButton from \"./UI/LoginButton\";\nimport \"./FilterAddBar.css\";\n\nfunction FilterAddBar({ loading }) {\n  const { state, dispatch } = useContext(userContext);\n\n  function clickNewInvoiceHandler() {\n    dispatch({ type: \"NEW_INVOICE_MODAL\" });\n  }\n\n  //Determines invoice display message on profile page and shows loading status\n  const numOfInvoices = () => {\n    if (loading) {\n      return <p>Loading...</p>;\n    } else if (!loading && state.numOfUserInvoices) {\n      return <p>{state.numOfUserInvoices} invoices</p>;\n    } else {\n      return <p>No invoices</p>;\n    }\n  };\n\n  return (\n    <div className=\"main-container\">\n      <div className=\"invoice-text-container\">\n        <p className=\"invoice-header\">Invoices</p>\n        <div className=\"invoice-text\">{numOfInvoices()}</div>\n      </div>\n      <LoginButton\n        onClick={clickNewInvoiceHandler}\n        classes={\"active smaller-btn\"}\n      >\n        <div className=\"plus-circle\">\n          <img src={icon_plus} alt=\"plus icon\" />\n        </div>\n        <p className=\"text\"> New</p>\n      </LoginButton>\n    </div>\n  );\n}\n\nexport default FilterAddBar;\n","import React, { createContext, useReducer } from \"react\";\n\nconst initialState = {\n  paymentTermOptions: false,\n  userStreetAddress: \"\",\n  userCity: \"\",\n  userState: \"\",\n  userZipCode: \"\",\n  userCountry: \"\",\n  clientName: \"\",\n  clientEmail: \"\",\n  clientStreetAddress: \"\",\n  clientCity: \"\",\n  clientState: \"\",\n  clientZipCode: \"\",\n  clientCountry: \"\",\n  invoiceDate: \"\",\n  displayMessage: \"\",\n  numOfDays: \"\",\n  projectDescription: \"\",\n  currentInvoiceID: null,\n  selectedInvoice: {},\n  editingInvoice: false,\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SELECT_PAYMENT_TERMS\": {\n      return {\n        ...state,\n        paymentTermOptions: !state.paymentTermOptions,\n      };\n    }\n\n    case \"userStreetAddress\": {\n      let editedInvoice = state.selectedInvoice;\n      if (Object.keys(state.selectedInvoice).length) {\n        editedInvoice.user_street_address = action.value;\n        return {\n          ...state,\n          selectedInvoice: editedInvoice,\n        };\n      }\n      return {\n        ...state,\n        userStreetAddress: action.value,\n      };\n    }\n\n    case \"userCity\": {\n      let editedInvoice = state.selectedInvoice;\n      if (Object.keys(state.selectedInvoice).length) {\n        editedInvoice.user_city = action.value;\n        return {\n          ...state,\n          selectedInvoice: editedInvoice,\n        };\n      }\n\n      return {\n        ...state,\n        userCity: action.value,\n      };\n    }\n\n    case \"userState\": {\n      let editedInvoice = state.selectedInvoice;\n      if (Object.keys(state.selectedInvoice).length) {\n        editedInvoice.user_state = action.value;\n        return {\n          ...state,\n          selectedInvoice: editedInvoice,\n        };\n      }\n      return {\n        ...state,\n        userState: action.value,\n      };\n    }\n\n    case \"userZipCode\": {\n      let editedInvoice = state.selectedInvoice;\n      if (Object.keys(state.selectedInvoice).length) {\n        editedInvoice.user_zip = action.value;\n        return {\n          ...state,\n          selectedInvoice: editedInvoice,\n        };\n      }\n      return {\n        ...state,\n        userZipCode: action.value,\n      };\n    }\n\n    case \"userCountry\": {\n      let editedInvoice = state.selectedInvoice;\n      if (Object.keys(state.selectedInvoice).length) {\n        editedInvoice.user_country = action.value;\n        return {\n          ...state,\n          selectedInvoice: editedInvoice,\n        };\n      }\n      return {\n        ...state,\n        userCountry: action.value,\n      };\n    }\n\n    case \"clientName\": {\n      let editedInvoice = state.selectedInvoice;\n      if (Object.keys(state.selectedInvoice).length) {\n        editedInvoice.client_name = action.value;\n        return {\n          ...state,\n          selectedInvoice: editedInvoice,\n        };\n      }\n      return {\n        ...state,\n        clientName: action.value,\n      };\n    }\n\n    case \"clientEmail\": {\n      let editedInvoice = state.selectedInvoice;\n      if (Object.keys(state.selectedInvoice).length) {\n        editedInvoice.client_email = action.value;\n        return {\n          ...state,\n          selectedInvoice: editedInvoice,\n        };\n      }\n      return {\n        ...state,\n        clientEmail: action.value,\n      };\n    }\n\n    case \"clientStreetAddress\": {\n      let editedInvoice = state.selectedInvoice;\n      if (Object.keys(state.selectedInvoice).length) {\n        editedInvoice.client_street_address = action.value;\n        return {\n          ...state,\n          selectedInvoice: editedInvoice,\n        };\n      }\n      return {\n        ...state,\n        clientStreetAddress: action.value,\n      };\n    }\n\n    case \"clientCity\": {\n      let editedInvoice = state.selectedInvoice;\n      if (Object.keys(state.selectedInvoice).length) {\n        editedInvoice.client_city = action.value;\n        return {\n          ...state,\n          selectedInvoice: editedInvoice,\n        };\n      }\n      return {\n        ...state,\n        clientCity: action.value,\n      };\n    }\n\n    case \"clientState\": {\n      let editedInvoice = state.selectedInvoice;\n      if (Object.keys(state.selectedInvoice).length) {\n        editedInvoice.client_state = action.value;\n        return {\n          ...state,\n          selectedInvoice: editedInvoice,\n        };\n      }\n      return {\n        ...state,\n        clientState: action.value,\n      };\n    }\n\n    case \"clientZipCode\": {\n      let editedInvoice = state.selectedInvoice;\n      if (Object.keys(state.selectedInvoice).length) {\n        editedInvoice.client_zip = action.value;\n        return {\n          ...state,\n          selectedInvoice: editedInvoice,\n        };\n      }\n      return {\n        ...state,\n        clientZipCode: action.value,\n      };\n    }\n\n    case \"clientCountry\": {\n      let editedInvoice = state.selectedInvoice;\n      if (Object.keys(state.selectedInvoice).length) {\n        editedInvoice.client_country = action.value;\n        return {\n          ...state,\n          selectedInvoice: editedInvoice,\n        };\n      }\n      return {\n        ...state,\n        clientCountry: action.value,\n      };\n    }\n\n    case \"invoiceDate\": {\n      let editedInvoice = state.selectedInvoice;\n      if (Object.keys(state.selectedInvoice).length) {\n        editedInvoice.order_date = action.value;\n        return {\n          ...state,\n          selectedInvoice: editedInvoice,\n        };\n      }\n      return {\n        ...state,\n        invoiceDate: action.value,\n      };\n    }\n\n    case \"UPDATE_PAYMENT_TERMS\": {\n      return {\n        ...state,\n        displayMessage: action.displayMessage,\n        numOfDays: action.numOfDays,\n      };\n    }\n\n    case \"projectDescription\": {\n      let editedInvoice = state.selectedInvoice;\n      if (Object.keys(state.selectedInvoice).length) {\n        editedInvoice.project_type = action.value;\n        return {\n          ...state,\n          selectedInvoice: editedInvoice,\n        };\n      }\n      return {\n        ...state,\n        projectDescription: action.value,\n      };\n    }\n\n    case \"RESET\": {\n      return initialState;\n    }\n\n    case \"INVOICE_ID\": {\n      return {\n        ...state,\n        currentInvoiceID: action.value,\n      };\n    }\n\n    case \"EDITING\": {\n      return {\n        ...state,\n        editingInvoice: true,\n      };\n    }\n\n    case \"SELECTED_INVOICE\": {\n      return {\n        ...state,\n        selectedInvoice: action.value,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport const invoiceContext = createContext(initialState);\n\nexport const InvoiceStore = ({ children }) => {\n  const [invoiceState, updateInvoice] = useReducer(reducer, initialState);\n\n  return (\n    <invoiceContext.Provider value={{ invoiceState, updateInvoice }}>\n      {children}\n    </invoiceContext.Provider>\n  );\n};\n","function numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nexport default numberWithCommas;\n","import React from \"react\";\nimport \"./StatusDiv.css\";\n\n//CSS classes dynamically passed based on the status the user selected\nfunction StatusDiv({ invoiceStatus }) {\n  return (\n    <React.Fragment>\n      <div className={`status-container ${invoiceStatus}-container`}>\n        <div className={`circle-icon ${invoiceStatus}-circle`}></div>\n        <p className={`status-text ${invoiceStatus}-text`}>{invoiceStatus}</p>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default StatusDiv;\n","import React from \"react\";\nimport numberWithCommas from \"../../../helpers/formatNumber\";\nimport StatusDiv from \"../StatusDiv\";\nimport \"./DateStatusAndAmount.css\";\n\nfunction DateStatusAndAmount({ dueDate, total, invoiceStatus }) {\n  return (\n    <div className=\"date-status-amount\">\n      <div className=\"date-amount-container\">\n        <p className=\"date-due\">{`Due ${dueDate}`}</p>\n        <div className=\"amount-container\">\n          <p className=\"amount\">{`$${numberWithCommas(total.toFixed(2))}`}</p>\n        </div>\n      </div>\n      <StatusDiv invoiceStatus={invoiceStatus} />\n    </div>\n  );\n}\n\nexport default DateStatusAndAmount;\n","import React, { useContext } from \"react\";\nimport { userContext } from \"../../../store/userStore\";\nimport \"./InvoiceAndName.css\";\n\nfunction InvoiceAndName({ number, clientName }) {\n  const { state, dispatch } = useContext(userContext);\n  return (\n    <div className=\"invoice-name\">\n      <div className=\"left-container\">\n        <p className=\"num-sign\">#</p>\n        <p className=\"invoice-number\">{`IOU${number}`}</p>\n      </div>\n      <div className=\"customer-name-container\">\n        <p className=\"customer-name\">{clientName}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default InvoiceAndName;\n","import React, { useContext } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { userContext } from \"../../../store/userStore\";\nimport { invoiceContext } from \"../../../store/invoiceStore\";\nimport DateStatusAndAmount from \"./DateStatusAndAmount\";\nimport InvoiceAndName from \"./InvoiceAndName\";\nimport \"./InvoiceCard.css\";\n\nfunction InvoiceCard({\n  number,\n  invoiceStatus,\n  dueDate,\n  total,\n  clientName,\n  classes,\n}) {\n  const navigate = useNavigate();\n  const { state, dispatch } = useContext(userContext);\n  const { invoiceState, updateInvoice } = useContext(invoiceContext);\n\n  //Updates global state to \"editing mode\" and redirects user to that single invoice\n  function invoiceClickHandler() {\n    navigate(`/invoice/${number}`);\n    updateInvoice({ type: \"EDITING\" });\n  }\n\n  return (\n    <div onClick={invoiceClickHandler} className={`card-container ${classes}`}>\n      <InvoiceAndName clientName={clientName} number={number} />\n      <DateStatusAndAmount\n        dueDate={dueDate}\n        total={total}\n        invoiceStatus={invoiceStatus}\n      />\n    </div>\n  );\n}\n\nexport default InvoiceCard;\n","import React, { createContext, useReducer } from \"react\";\n\nconst initialState = {\n  lineItems: [\n    {\n      quantity: \"\",\n      unitPrice: \"\",\n      itemName: \"\",\n      subtotal: \"\",\n    },\n  ],\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"itemName\": {\n      const arrOfLineItems = state.lineItems;\n      arrOfLineItems[action.index].itemName = action.value;\n      return {\n        ...state,\n        lineItems: arrOfLineItems,\n      };\n    }\n\n    case \"quantity\": {\n      const arrOfLineItems = state.lineItems;\n      arrOfLineItems[action.index].quantity = action.value;\n      const total =\n        +arrOfLineItems[action.index].quantity *\n        +arrOfLineItems[action.index].unitPrice;\n      arrOfLineItems[action.index].subtotal = total.toFixed(2);\n      return {\n        ...state,\n        arrOfLineItems,\n      };\n    }\n\n    case \"unitPrice\": {\n      const arrOfLineItems = state.lineItems;\n      arrOfLineItems[action.index].unitPrice = action.value;\n      const total =\n        +arrOfLineItems[action.index].quantity *\n        +arrOfLineItems[action.index].unitPrice;\n      arrOfLineItems[action.index].subtotal = total.toFixed(2);\n\n      return {\n        ...state,\n        arrOfLineItems,\n      };\n    }\n\n    case \"ADD_NEW_LINE\": {\n      const updatedLineItems = [\n        ...state.lineItems,\n        {\n          quantity: \"\",\n          unitPrice: \"\",\n          itemName: \"\",\n          subtotal: \"\",\n        },\n      ];\n\n      return {\n        ...state,\n        lineItems: updatedLineItems,\n      };\n    }\n\n    case \"DELETE_LINE\": {\n      const updatedLineItems = [...state.lineItems];\n      updatedLineItems.splice(action.index, 1);\n      return {\n        ...state,\n        lineItems: updatedLineItems,\n      };\n    }\n\n    case \"RESET\": {\n      return initialState;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport const lineItemContext = createContext(initialState);\n\nexport const LineItemStore = ({ children }) => {\n  const [lineItemState, updateLineItem] = useReducer(reducer, initialState);\n\n  return (\n    <lineItemContext.Provider value={{ lineItemState, updateLineItem }}>\n      {children}\n    </lineItemContext.Provider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { invoiceContext } from \"../../../../store/invoiceStore\";\nimport \"./BillFrom.css\";\n\nfunction BillFrom() {\n  const { invoiceState, updateInvoice } = useContext(invoiceContext);\n\n  //Function used on form and reusable accross all fields by referencing the \"name\" property\n  //Global state is updated in real time\n  function formChangeHandler(e) {\n    updateInvoice({ type: e.target.name, value: e.target.value });\n  }\n\n  return (\n    <React.Fragment>\n      <p className=\"bill\">Bill From</p>\n      <div className=\"input-container\">\n        <label htmlFor=\"userStreetAddress\" className=\"label\">\n          Street Address\n        </label>\n        <input\n          type=\"text\"\n          name=\"userStreetAddress\"\n          className=\"invoice-input street-input\"\n          value={\n            invoiceState.selectedInvoice\n              ? invoiceState.selectedInvoice.user_street_address\n              : invoiceState.userStreetAddress\n          }\n          onChange={formChangeHandler}\n        />\n        <div className=\"city-state-container\">\n          <div className=\"container\">\n            <label htmlFor=\"city\" className=\"label\">\n              City\n            </label>\n            <input\n              type=\"text\"\n              name=\"userCity\"\n              value={\n                invoiceState.selectedInvoice\n                  ? invoiceState.selectedInvoice.user_city\n                  : invoiceState.city\n              }\n              onChange={formChangeHandler}\n              className=\"invoice-input city-state-input\"\n            />\n          </div>\n          <div className=\"container\">\n            <label htmlFor=\"state\" className=\"label state-label\">\n              State\n            </label>\n            <input\n              type=\"text\"\n              name=\"userState\"\n              value={\n                invoiceState.selectedInvoice\n                  ? invoiceState.selectedInvoice.user_state\n                  : invoiceState.userState\n              }\n              onChange={formChangeHandler}\n              className=\"invoice-input city-state-input state-input\"\n            />\n          </div>\n        </div>\n        <div className=\"city-state-container\">\n          <div className=\"container\">\n            <label htmlFor=\"city\" className=\"label\">\n              Zip Code\n            </label>\n            <input\n              type=\"text\"\n              name=\"userZipCode\"\n              value={\n                invoiceState.selectedInvoice\n                  ? invoiceState.selectedInvoice.user_zip\n                  : invoiceState.userZipCode\n              }\n              onChange={formChangeHandler}\n              className=\"invoice-input city-state-input\"\n            />\n          </div>\n          <div className=\"container\">\n            <label htmlFor=\"state\" className=\"label state-label\">\n              Country\n            </label>\n            <input\n              type=\"text\"\n              name=\"userCountry\"\n              value={\n                invoiceState.selectedInvoice\n                  ? invoiceState.selectedInvoice.user_country\n                  : invoiceState.userCountry\n              }\n              onChange={formChangeHandler}\n              className=\"invoice-input city-state-input state-input\"\n            />\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default BillFrom;\n","import React, { useContext } from \"react\";\nimport { invoiceContext } from \"../../../../store/invoiceStore\";\nimport \"./BillTo.css\";\n\nfunction BillTo() {\n  const { invoiceState, updateInvoice } = useContext(invoiceContext);\n\n  //Function used on form and reusable accross all fields by referencing the \"name\" property\n  //Global state is updated in real time\n  function formChangeHandler(e) {\n    updateInvoice({ type: e.target.name, value: e.target.value });\n  }\n\n  return (\n    <React.Fragment>\n      <p className=\"bill\">Bill To</p>\n      <div className=\"input-container\">\n        <label htmlFor=\"clientName\" className=\"label bill-to-label\">\n          Client's Name\n        </label>\n        <input\n          type=\"text\"\n          className=\"invoice-input bill-to-input\"\n          name=\"clientName\"\n          onChange={formChangeHandler}\n          value={\n            invoiceState.selectedInvoice\n              ? invoiceState.selectedInvoice.client_name\n              : invoiceState.clientName\n          }\n        />\n        <label htmlFor=\"client-email\" className=\"label bill-to-label\">\n          Client's Email\n        </label>\n        <input\n          type=\"text\"\n          className=\"invoice-input bill-to-input\"\n          name=\"clientEmail\"\n          value={\n            invoiceState.selectedInvoice\n              ? invoiceState.selectedInvoice.client_email\n              : invoiceState.clientEmail\n          }\n          onChange={formChangeHandler}\n        />\n        <label htmlFor=\"client-street\" className=\"label bill-to-label\">\n          Street Address\n        </label>\n        <input\n          type=\"text\"\n          className=\"invoice-input bill-to-input\"\n          name=\"clientStreetAddress\"\n          value={\n            invoiceState.selectedInvoice\n              ? invoiceState.selectedInvoice.client_street_address\n              : invoiceState.clientStreetAddress\n          }\n          onChange={formChangeHandler}\n        />\n        <div className=\"city-state-container\">\n          <div className=\"container\">\n            <label htmlFor=\"clientCity\" className=\"label\">\n              City\n            </label>\n            <input\n              type=\"text\"\n              name=\"clientCity\"\n              value={\n                invoiceState.selectedInvoice\n                  ? invoiceState.selectedInvoice.client_city\n                  : invoiceState.clientCity\n              }\n              onChange={formChangeHandler}\n              className=\"invoice-input city-state-input\"\n            />\n          </div>\n          <div className=\"container\">\n            <label htmlFor=\"clientState\" className=\"label state-label\">\n              State\n            </label>\n            <input\n              type=\"text\"\n              name=\"clientState\"\n              value={\n                invoiceState.selectedInvoice\n                  ? invoiceState.selectedInvoice.client_state\n                  : invoiceState.clientState\n              }\n              onChange={formChangeHandler}\n              className=\"invoice-input city-state-input state-input\"\n            />\n          </div>\n        </div>\n        <div className=\"city-state-container\">\n          <div className=\"container\">\n            <label htmlFor=\"clientZipCode\" className=\"label\">\n              Zip Code\n            </label>\n            <input\n              type=\"text\"\n              name=\"clientZipCode\"\n              value={\n                invoiceState.selectedInvoice\n                  ? invoiceState.selectedInvoice.client_zip\n                  : invoiceState.clientZipCode\n              }\n              onChange={formChangeHandler}\n              className=\"invoice-input city-state-input\"\n            />\n          </div>\n          <div className=\"container\">\n            <label htmlFor=\"clientCountry\" className=\"label state-label\">\n              Country\n            </label>\n            <input\n              type=\"text\"\n              name=\"clientCountry\"\n              value={\n                invoiceState.selectedInvoice\n                  ? invoiceState.selectedInvoice.client_country\n                  : invoiceState.clientCountry\n              }\n              onChange={formChangeHandler}\n              className=\"invoice-input city-state-input state-input\"\n            />\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default BillTo;\n","export default __webpack_public_path__ + \"static/media/icon_arrow_down.a6ed7bff.svg\";","import React, { useContext, useState } from \"react\";\nimport { invoiceContext } from \"../../../../store/invoiceStore\";\nimport \"./PaymentTerms.css\";\n\nfunction PaymentTerms() {\n  //State variable that allows for payment terms to be displayed when creating a new invoice\n  const [purple, setPurple] = useState({\n    1: false,\n    7: false,\n    14: false,\n    30: false,\n  });\n\n  const { invoiceState, updateInvoice } = useContext(invoiceContext);\n\n  //Updates global state for DB call\n  function updatePaymentTerms(e) {\n    updateInvoice({\n      type: \"UPDATE_PAYMENT_TERMS\",\n      displayMessage: e.target.textContent,\n      numOfDays: +e.target.id,\n    });\n  }\n\n  function clickHandler(e) {\n    //Resets payment term state\n    setPurple({\n      1: false,\n      7: false,\n      14: false,\n      30: false,\n    });\n\n    //Updates state for display message based on which one was clicked\n    updatePaymentTerms(e);\n    setPurple({\n      [e.target.id]: true,\n    });\n  }\n  return (\n    <div className=\"payment-terms-box\">\n      <div className=\"net-box\">\n        <p\n          onClick={clickHandler}\n          id=\"1\"\n          className={purple[1] ? \"net-text purple-text\" : \"net-text\"}\n        >\n          Net 1 Day\n        </p>\n      </div>\n      <div className=\"net-box\">\n        <p\n          onClick={clickHandler}\n          id=\"7\"\n          className={purple[7] ? \"net-text purple-text\" : \"net-text\"}\n        >\n          Net 7 Days\n        </p>\n      </div>\n      <div className=\"net-box\">\n        <p\n          onClick={clickHandler}\n          id=\"14\"\n          className={purple[14] ? \"net-text purple-text\" : \"net-text\"}\n        >\n          Net 14 Days\n        </p>\n      </div>\n      <div className=\"net-box\">\n        <p\n          onClick={clickHandler}\n          id=\"30\"\n          className={purple[30] ? \"net-text purple-text\" : \"net-text\"}\n        >\n          Net 30 Days\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default PaymentTerms;\n","import React, { useContext } from \"react\";\nimport { useParams } from \"react-router\";\nimport { invoiceContext } from \"../../../../store/invoiceStore\";\nimport icon_arrow_down from \"../../../../assets/icon_arrow_down.svg\";\nimport \"./InvoiceDetails.css\";\nimport PaymentTerms from \"./PaymentTerms\";\n\nfunction InvoiceDetails() {\n  const { invoiceState, updateInvoice } = useContext(invoiceContext);\n  const { id } = useParams();\n\n  let day = \"\";\n  let currentOrderDate = [];\n\n  if (invoiceState.selectedInvoice.order_date) {\n    currentOrderDate = invoiceState.selectedInvoice.order_date.split(\"-\");\n  }\n\n  //Reformatting the date to meet required format, \"yyyy-mm-dd\"\n  function formatDate(date) {\n    if (!invoiceState.selectedInvoice.order_date) {\n      return \"\";\n    }\n    for (let i = 0; i < date[2].length; i++) {\n      if (i > 1) {\n        break;\n      }\n      day += date[2].charAt(i);\n    }\n    date[2] = day;\n    return (date = date.join(\"-\"));\n  }\n\n  //Updates global state on payment terms that's later used to store in DB\n  function clickPaymentTermsHandler() {\n    updateInvoice({ type: \"SELECT_PAYMENT_TERMS\" });\n  }\n\n  //Function used on form and reusable accross all fields by referencing the \"name\" property\n  //Global state is updated in real time\n  function formChangeHandler(e) {\n    updateInvoice({ type: e.target.name, value: e.target.value });\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"input-container invoice-detail-container\">\n        <label htmlFor=\"invoice-date\" className=\"label bill-to-label\">\n          Invoice Date\n        </label>\n        <input\n          type=\"date\"\n          className=\"invoice-input bill-to-input date-input\"\n          name=\"invoiceDate\"\n          onChange={formChangeHandler}\n          value={\n            invoiceState.selectedInvoice.order_date &&\n            formatDate(currentOrderDate)\n          }\n        />\n\n        {/* Users are only allowed to edit certain details once an invoice is submitted */}\n        {id ? null : (\n          <React.Fragment>\n            <label htmlFor=\"payment-terms\" className=\"label bill-to-label\">\n              Payment Terms\n            </label>\n            <div\n              className=\"invoice-input bill-to-input date-input select-dropdown\"\n              name=\"payment-terms\"\n            >\n              {invoiceState.displayMessage}\n              <img\n                src={icon_arrow_down}\n                alt=\"down-arrow\"\n                className=\"invoice-down-arrow\"\n                onClick={clickPaymentTermsHandler}\n              />\n            </div>\n            {invoiceState.paymentTermOptions && <PaymentTerms />}\n          </React.Fragment>\n        )}\n        <label htmlFor=\"project-description\" className=\"label bill-to-label\">\n          Project Description\n        </label>\n        <input\n          type=\"text\"\n          className=\"invoice-input bill-to-input date-input\"\n          name=\"projectDescription\"\n          onChange={formChangeHandler}\n          value={\n            invoiceState.selectedInvoice\n              ? invoiceState.selectedInvoice.project_type\n              : invoiceState.projectDescription\n          }\n        />\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default InvoiceDetails;\n","export default __webpack_public_path__ + \"static/media/icon_delete.55a4f6bd.svg\";","import React, { useContext } from \"react\";\nimport { lineItemContext } from \"../../../../store/lineItemStore\";\nimport \"./ItemInForm.css\";\nimport icon_delete from \"../../../../assets/icon_delete.svg\";\n\nfunction ItemInForm({ index }) {\n  const { lineItemState, updateLineItem } = useContext(lineItemContext);\n\n  //Updates the line item values on global state and displays it back to the user onChange\n  function formChangeHandler(e) {\n    updateLineItem({\n      type: e.target.name,\n      value: e.target.value,\n      index,\n    });\n  }\n\n  function deleteHandler() {\n    updateLineItem({\n      type: \"DELETE_LINE\",\n      index,\n    });\n  }\n  return (\n    <div className=\"input-container\">\n      <label htmlFor=\"item-name\" className=\"label bill-to-label\">\n        Item Name\n      </label>\n      <input\n        type=\"text\"\n        className=\"invoice-input bill-to-input\"\n        name=\"itemName\"\n        value={lineItemState.lineItems[index].itemName}\n        onChange={formChangeHandler}\n      />\n      <div className=\"quantity-price-container\">\n        <div className=\"qty-container\">\n          <label htmlFor=\"quantity\" className=\"label bill-to-label item-label\">\n            Qty.\n          </label>\n          <input\n            type=\"number\"\n            min=\"0\"\n            className=\"invoice-input bill-to-input qty-input\"\n            name=\"quantity\"\n            value={lineItemState.lineItems[index].quantity}\n            onChange={formChangeHandler}\n          />\n        </div>\n        <div className=\"price-container\">\n          <label htmlFor=\"price\" className=\"label bill-to-label\">\n            Price\n          </label>\n          <input\n            type=\"text\"\n            className=\"invoice-input bill-to-input\"\n            name=\"unitPrice\"\n            value={lineItemState.lineItems[index].unitPrice}\n            onChange={formChangeHandler}\n          />\n        </div>\n        <div className=\"total-container\">\n          <div className=\"total-container-2\">\n            <p className=\"label bill-to-label\">Total</p>\n            <div className=\"total-display\">\n              {lineItemState.lineItems[index].subtotal}\n            </div>\n          </div>\n          <img\n            src={icon_delete}\n            alt=\"trash can\"\n            onClick={deleteHandler}\n            className=\"trash-can\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ItemInForm;\n","import React from \"react\";\nimport \"./InvoiceFooter.css\";\n\nfunction InvoiceFooter({ children }) {\n  return <div className=\"invoice-footer-wrapper\">{children}</div>;\n}\n\nexport default InvoiceFooter;\n","import axios from \"axios\";\n\nasync function createNewInvoice(invoiceState, lineItemState, invoiceStatus) {\n  const accessToken = sessionStorage.getItem(\"accessToken\");\n  const apiUrl = `${process.env.REACT_APP_BACKEND_URL}`;\n\n  const authAxios = axios.create({\n    baseURL: apiUrl,\n    headers: {\n      access_token: accessToken,\n    },\n  });\n  try {\n    const res = await authAxios.post(\"/invoice\", {\n      ...invoiceState,\n      ...lineItemState,\n      invoiceStatus,\n    });\n  } catch (error) {\n    console.log(error);\n    return;\n  }\n}\n\nexport default createNewInvoice;\n","import axios from \"axios\";\n\nasync function editInvoice(selectedInvoice) {\n  try {\n    const accessToken = sessionStorage.getItem(\"accessToken\");\n    const apiUrl = `${process.env.REACT_APP_BACKEND_URL}`;\n\n    const authAxios = axios.create({\n      baseURL: apiUrl,\n      headers: {\n        access_token: accessToken,\n      },\n    });\n    const res = await authAxios.put(`/edit`, { selectedInvoice });\n    return res.data;\n  } catch (error) {\n    console.log(error);\n    return;\n  }\n}\n\nexport default editInvoice;\n","export default __webpack_public_path__ + \"static/media/icon_arrow_left.e9bb7637.svg\";","import React, { useContext } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { userContext } from \"../store/userStore\";\nimport { invoiceContext } from \"../store/invoiceStore\";\nimport \"./GoBack.css\";\nimport icon_arrow_left from \"../assets/icon_arrow_left.svg\";\n\nfunction GoBack() {\n  const navigate = useNavigate();\n  const { state, dispatch } = useContext(userContext);\n  const { invoiceState, updateInvoice } = useContext(invoiceContext);\n\n  //This component is used on multiple models. This will determine if user needs to be redirected to the profile page as well as have the modal closed\n  function clickGoBack() {\n    if (state.modalToDisplay) {\n      dispatch({ type: \"CLOSE_MODAL\" });\n      return;\n    } else {\n      dispatch({ type: \"CLOSE_MODAL\" });\n      navigate(\"/profile\");\n    }\n\n    updateInvoice({ type: \"RESET\" });\n  }\n  return (\n    <div onClick={clickGoBack} className=\"go-back\">\n      <img src={icon_arrow_left} alt=\"left arrow\" className=\"left-arrow\" />\n      <p className=\"go-back-text\">Go back</p>\n    </div>\n  );\n}\n\nexport default GoBack;\n","import React, { useContext } from \"react\";\nimport { userContext } from \"../../../../store/userStore\";\nimport { useParams } from \"react-router-dom\";\nimport { lineItemContext } from \"../../../../store/lineItemStore\";\nimport { invoiceContext } from \"../../../../store/invoiceStore\";\nimport \"./InvoiceModal.css\";\n\nimport BillFrom from \"./BillFrom\";\nimport BillTo from \"./BillTo\";\nimport InvoiceDetails from \"./InvoiceDetails\";\nimport ItemInForm from \"./ItemInForm\";\nimport InvoiceFooter from \"../../../InvoiceFooter\";\nimport LoginButton from \"../../LoginButton\";\nimport createNewInvoice from \"../../../../api/createInvoice\";\nimport editInvoice from \"../../../../api/editInvoice\";\nimport GoBack from \"../../../GoBack\";\n\nfunction InvoiceModal() {\n  const { state, dispatch } = useContext(userContext);\n  const { lineItemState, updateLineItem } = useContext(lineItemContext);\n  const { invoiceState, updateInvoice } = useContext(invoiceContext);\n  const { id } = useParams();\n\n  //Adds another component for additional line items to be entered\n  function newLineClickHandler() {\n    updateLineItem({ type: \"ADD_NEW_LINE\" });\n  }\n\n  //Lists out all line items and displays them on modal\n  const listOfLineItems = lineItemState.lineItems.map((line, index) => {\n    return <ItemInForm index={index} key={index} />;\n  });\n\n  //Utilizes api function to store a new invoice. Default status is pending.\n  async function submitInvoice(e) {\n    let status = \"Pending\";\n    if (e.target.textContent === \"Discard\") {\n      dispatch({ type: \"CLOSE_MODAL\" });\n      updateLineItem({ type: \"RESET\" });\n      updateInvoice({ type: \"RESET\" });\n      return;\n    }\n\n    //Checks for editing to hit a different end point on the server\n    if (invoiceState.editingInvoice) {\n      await editInvoice(invoiceState.selectedInvoice);\n      updateLineItem({ type: \"RESET\" });\n      updateInvoice({ type: \"RESET\" });\n      dispatch({ type: \"CLOSE_MODAL\" });\n      return;\n    }\n\n    if (e.target.textContent === \"Save as Draft\") {\n      status = \"Draft\";\n    }\n    await createNewInvoice(invoiceState, lineItemState, status);\n    updateLineItem({ type: \"RESET\" });\n    updateInvoice({ type: \"RESET\" });\n    dispatch({ type: \"CLOSE_MODAL\" });\n  }\n\n  return (\n    <div className=\"invoice-overlay\">\n      <div className=\"invoice-card\">\n        <div className=\"content-container\">\n          <GoBack />\n          <p className=\"new-invoice-text\">\n            {invoiceState.selectedInvoice.id\n              ? `Edit #IOU${invoiceState.selectedInvoice.id}`\n              : \"New Invoice\"}\n          </p>\n          <BillFrom />\n          <BillTo />\n          <InvoiceDetails />\n          {id ? null : (\n            <React.Fragment>\n              <p className=\"item-list-header\">Item List</p>\n              {listOfLineItems}\n              <button onClick={newLineClickHandler} className=\"add-item\">\n                + Add New Item{\" \"}\n              </button>\n            </React.Fragment>\n          )}\n          <div className=\"gradient\"></div>\n          <div className=\"filler\"></div>\n\n          <InvoiceFooter>\n            <LoginButton\n              onClick={submitInvoice}\n              classes={\"invoice-footer-btn discard\"}\n            >\n              Discard\n            </LoginButton>\n            <LoginButton\n              onClick={submitInvoice}\n              classes={\"invoice-footer-btn draft\"}\n            >\n              Save as Draft\n            </LoginButton>\n            <LoginButton\n              onClick={submitInvoice}\n              classes={\"active invoice-footer-btn\"}\n            >\n              Save & Send\n            </LoginButton>\n          </InvoiceFooter>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default InvoiceModal;\n","import axios from \"axios\";\n\nasync function getUserInvoices() {\n  try {\n    const accessToken = sessionStorage.getItem(\"accessToken\");\n    const apiUrl = `${process.env.REACT_APP_BACKEND_URL}`;\n\n    const authAxios = axios.create({\n      baseURL: apiUrl,\n      headers: {\n        access_token: accessToken,\n      },\n    });\n    const res = await authAxios.get(`/all`);\n    const allInvoices = await res.data;\n\n    return allInvoices;\n  } catch (error) {\n    console.log(error);\n    return;\n  }\n}\n\nexport default getUserInvoices;\n","export default __webpack_public_path__ + \"static/media/illustration_empty.e3122ec2.svg\";","import React from \"react\";\nimport { useContext, useEffect, useState } from \"react\";\nimport Header from \"../components/Header\";\nimport { userContext } from \"../store/userStore\";\nimport FilterAddBar from \"../components/FilterAddBar\";\nimport \"./Profile.css\";\nimport InvoiceCard from \"../components/UI/Invoice-Card/InvoiceCard\";\nimport InvoiceModal from \"../components/UI/Modals/New-Invoice-Modal/InvoiceModal\";\nimport getUserInvoices from \"../api/getInvoices\";\nimport illustration_empty from \"../assets/illustration_empty.svg\";\n\nfunction Profile() {\n  const { state, dispatch } = useContext(userContext);\n  const [noInvoices, setNoInvoices] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [invoiceListState, setInvoiceListState] = useState([]);\n\n  //Grabbing the signed in user's invoices from the server and DB\n  useEffect(() => {\n    if (state.user) {\n      const allInvoices = getUserInvoices();\n      allInvoices.then((res) => {\n        if (res && res.userInvoices && res.userInvoices.length > 0) {\n          dispatch({ type: \"USERS_INVOICES\", value: res.userInvoices });\n          dispatch({ type: \"NUM_OF_INVOICES\", value: res.userInvoices.length });\n          setNoInvoices(false);\n          setInvoiceListState(\n            res.userInvoices.map((invoice, index) => {\n              return (\n                <InvoiceCard\n                  key={index}\n                  classes={index % 2 === 0 ? \"left\" : \"right\"}\n                  number={invoice.id}\n                  invoiceStatus={invoice.is_paid}\n                  dueDate={invoice.payment_date}\n                  total={invoice.subtotal}\n                  clientName={invoice.client_name}\n                />\n              );\n            })\n          );\n        } else {\n          setNoInvoices(true);\n        }\n      });\n    }\n    setLoading(false);\n  }, [state.modalToDisplay]);\n\n  return (\n    <div className=\"profile-container\">\n      {state.modalToDisplay && <InvoiceModal />}\n      <Header />\n      <FilterAddBar loading={loading} />\n      {noInvoices ? (\n        <div className=\"image-wrapper\">\n          <img src={illustration_empty} alt=\"no invoices image\" />\n          <p className=\"nothing-here\">There is nothing here</p>\n          <p className=\"instructions\">\n            Create a new invoice by clicking the{\" \"}\n            <span id=\"new-invoice-text\">&nbsp;New Invoice</span>&nbsp;button and\n            get started\n          </p>\n        </div>\n      ) : invoiceListState ? (\n        invoiceListState\n      ) : (\n        \"Loading...\"\n      )}\n    </div>\n  );\n}\n\nexport default Profile;\n","import React from \"react\";\nimport \"./LineItem.css\";\n\nfunction LineItem({ itemName, quantity, unitPrice, subtotal }) {\n  return (\n    <div className=\"description-wrapper\">\n      <div className=\"quantity-and-unitprice\">\n        <p className=\"design-title\">{itemName}</p>\n        <p className=\"units-price\">{`${quantity} x $${unitPrice}`}</p>\n      </div>\n      <p className=\"design-title\">{`$${subtotal}`}</p>\n    </div>\n  );\n}\n\nexport default LineItem;\n","import axios from \"axios\";\n\nasync function getLineItems(invoiceID) {\n  try {\n    const accessToken = sessionStorage.getItem(\"accessToken\");\n    const apiUrl = `${process.env.REACT_APP_BACKEND_URL}`;\n\n    const authAxios = axios.create({\n      baseURL: apiUrl,\n      headers: {\n        access_token: accessToken,\n      },\n    });\n    const res = await authAxios.get(`/line-items/${invoiceID}`);\n    const lineItems = res.data;\n    return lineItems;\n  } catch (error) {\n    console.log(error);\n    return;\n  }\n}\n\nexport default getLineItems;\n","import React, { Fragment, useContext, useState, useEffect } from \"react\";\nimport { invoiceContext } from \"../store/invoiceStore\";\nimport LineItem from \"./LineItem\";\nimport \"./LineItemDetails.css\";\nimport numberWithCommas from \"../helpers/formatNumber\";\nimport getLineItems from \"../api/getLineItem\";\n\nfunction LineItemDetails() {\n  const { invoiceState, updateInvoice } = useContext(invoiceContext);\n  const [lineItemsList, setLineItemsList] = useState([]);\n  const [subtotal, setSubtotal] = useState(0);\n\n  //The useEffects below are to update line items and formatting after the component mounts\n  useEffect(() => {\n    if (invoiceState.currentInvoiceID) {\n      const lineItems = getLineItems(invoiceState.currentInvoiceID);\n      lineItems.then((res) => {\n        setLineItemsList(res.lineItems);\n      });\n    }\n  }, [invoiceState.currentInvoiceID]);\n\n  useEffect(() => {\n    if (invoiceState.selectedInvoice.subtotal) {\n      setSubtotal(numberWithCommas(invoiceState.selectedInvoice.subtotal));\n    }\n  }, [invoiceState.selectedInvoice.subtotal]);\n\n  return (\n    <React.Fragment>\n      <div className=\"line-item-container\">\n        {lineItemsList.map((line, index) => {\n          return (\n            <LineItem\n              key={index}\n              itemName={line.item_name}\n              quantity={line.quantity}\n              unitPrice={line.unit_price}\n              subtotal={line.subtotal}\n            />\n          );\n        })}\n      </div>\n      <div className=\"grand-total-wrapper\">\n        <div className=\"grand-total\">\n          <p className=\"grand-total-text\">Grand Total</p>\n          <p className=\"total-price\">$ {subtotal}</p>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default LineItemDetails;\n","import axios from \"axios\";\n\nasync function paid(invoiceID) {\n  try {\n    const accessToken = sessionStorage.getItem(\"accessToken\");\n    const apiUrl = `${process.env.REACT_APP_BACKEND_URL}`;\n\n    const authAxios = axios.create({\n      baseURL: apiUrl,\n      headers: {\n        access_token: accessToken,\n      },\n    });\n    const res = await authAxios.put(`/mark-as-paid`, { invoiceID });\n    return res.data;\n  } catch (error) {\n    console.log(error);\n    return;\n  }\n}\n\nexport default paid;\n","import axios from \"axios\";\n\nasync function invoiceDelete(invoiceID) {\n  try {\n    const accessToken = sessionStorage.getItem(\"accessToken\");\n    const apiUrl = `${process.env.REACT_APP_BACKEND_URL}`;\n\n    const authAxios = axios.create({\n      baseURL: apiUrl,\n      headers: {\n        access_token: accessToken,\n      },\n    });\n    const res = await authAxios.delete(`/delete/${invoiceID}`);\n    if (res) {\n      return res.data;\n    }\n  } catch (error) {\n    console.log(error);\n    return;\n  }\n}\n\nexport default invoiceDelete;\n","import React, { useContext } from \"react\";\nimport { invoiceContext } from \"../../../store/invoiceStore\";\nimport { userContext } from \"../../../store/userStore\";\nimport { useNavigate } from \"react-router\";\nimport LoginButton from \"../LoginButton\";\nimport invoiceDelete from \"../../../api/deleteInvoice\";\nimport \"./DeleteModal.css\";\n\nfunction DeleteModal(selectedInvoiceID) {\n  const { state, dispatch } = useContext(userContext);\n  const { invoiceState, updateInvoice } = useContext(invoiceContext);\n  const navigate = useNavigate();\n\n  function cancelHandler() {\n    dispatch({ type: \"CLOSE_MODAL\" });\n  }\n\n  async function deleteHandler() {\n    const deletedInvoice = await invoiceDelete(\n      selectedInvoiceID.selectedInvoiceID\n    );\n\n    //Modal closed and user redirected to their profile once api call is finished\n    if (deletedInvoice) {\n      dispatch({ type: \"CLOSE_MODAL\" });\n      navigate(\"/profile\");\n      updateInvoice({ type: \"RESET\" });\n    }\n  }\n  return (\n    <div className=\"invoice-overlay\">\n      <div className=\"delete-invoice-card\">\n        <div className=\"delete-content\">\n          <p className=\"confirm-header\">Confirm Deletion</p>\n          <p className=\"confirm-message\">{`Are you sure you want to delete invoice #IOU${selectedInvoiceID.selectedInvoiceID}? This action cannot be undone.`}</p>\n          <div className=\"button-container\">\n            <LoginButton\n              onClick={cancelHandler}\n              classes={\"invoice-footer-btn discard\"}\n            >\n              Cancel\n            </LoginButton>\n            <LoginButton\n              onClick={deleteHandler}\n              classes={\"invoice-footer-btn draft delete\"}\n            >\n              Delete\n            </LoginButton>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DeleteModal;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport { userContext } from \"../store/userStore\";\nimport { invoiceContext } from \"../store/invoiceStore\";\nimport GoBack from \"../components/GoBack\";\nimport Header from \"../components/Header\";\nimport InvoiceFooter from \"../components/InvoiceFooter\";\nimport LineItemDetails from \"../components/LineItemDetails\";\nimport Card from \"../components/UI/Card\";\nimport LoginButton from \"../components/UI/LoginButton\";\nimport { useParams, useNavigate } from \"react-router\";\nimport paid from \"../api/markAsPaid\";\n\nimport StatusDiv from \"../components/UI/StatusDiv\";\nimport \"./Invoice.css\";\nimport DeleteModal from \"../components/UI/Modals/DeleteModal\";\nimport InvoiceModal from \"../components/UI/Modals/New-Invoice-Modal/InvoiceModal\";\n\nfunction Invoice() {\n  const { state, dispatch } = useContext(userContext);\n  const { invoiceState, updateInvoice } = useContext(invoiceContext);\n  const [orderDate, setOrderDate] = useState(\"\");\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  //Finds the correct invoice data to display off of global state\n  state.usersInvoices.forEach((invoice) => {\n    if (invoice.id === +id && invoiceState.selectedInvoice.id !== +id) {\n      updateInvoice({ type: \"SELECTED_INVOICE\", value: invoice });\n    }\n  });\n\n  async function markAsPaidHandler() {\n    await paid(invoiceState.selectedInvoice.id);\n    navigate(\"./profile\");\n    updateInvoice({ type: \"RESET\" });\n  }\n\n  function deleteHandler() {\n    dispatch({ type: \"DELETE_INVOICE_MODAL\" });\n  }\n\n  function editHandler() {\n    dispatch({ type: \"EDIT_INVOICE_MODAL\" });\n  }\n\n  //Used to format the day i.e. 02 Aug 2021\n  function formatDate(date) {\n    const invoiceDate = new Date(date);\n    let dateMiliSecs = Date.parse(invoiceDate);\n    let formattedDate = new Date(dateMiliSecs).toDateString();\n    let dateArr = formattedDate.split(\" \");\n    const newDateArr = [dateArr[2], dateArr[1], dateArr[3]];\n    return newDateArr.join(\" \");\n  }\n\n  useEffect(() => {\n    const invoiceDate = formatDate(invoiceState.selectedInvoice.order_date);\n    setOrderDate(invoiceDate);\n    updateInvoice({ type: \"INVOICE_ID\", value: id });\n  }, [invoiceState.selectedInvoice.order_date]);\n\n  return (\n    <React.Fragment>\n      {state.modalToDisplay === \"deleteInvoice\" && (\n        <DeleteModal selectedInvoiceID={invoiceState.selectedInvoice.id} />\n      )}\n\n      {state.modalToDisplay === \"editInvoice\" && <InvoiceModal />}\n      <Header />\n      <div className=\"page-container\">\n        <div className=\"page-container-2\">\n          <GoBack />\n          <Card classes={\"card-wrapper lighter-shadow\"}>\n            <div className=\"status-wrapper\">\n              <p className=\"status-text-invoicepg\">Status</p>\n              <StatusDiv invoiceStatus={invoiceState.selectedInvoice.is_paid} />\n            </div>\n          </Card>\n\n          <Card classes={\"card-wrapper lighter-shadow\"}>\n            <div className=\"invoice-content-container\">\n              <div className=\"invoice-description-container\">\n                <p className=\"invoice-num inline\">\n                  <span className=\"num-sign\">#</span>\n                  {`IOU${invoiceState.selectedInvoice.id}`}\n                </p>\n                <p className=\"description-text lighter-text\">\n                  {invoiceState.selectedInvoice.project_type}\n                </p>\n              </div>\n              <div className=\"address-container\">\n                <p className=\"lighter-text smaller-text address\">\n                  {invoiceState.selectedInvoice.user_street_address}\n                </p>\n                <p className=\"lighter-text smaller-text address\">\n                  {`${invoiceState.selectedInvoice.user_city} ${invoiceState.selectedInvoice.user_state} ${invoiceState.selectedInvoice.user_zip}`}\n                </p>\n                <p className=\"lighter-text smaller-text address\">\n                  {`${invoiceState.selectedInvoice.user_country}`}\n                </p>\n              </div>\n              <div className=\"invoice-date-name-container\">\n                <div className=\"invoice-date-payment\">\n                  <p className=\"smaller-text lighter-text client-details\">\n                    Invoice Date\n                  </p>\n                  <p className=\"bigger-text darker-text\">{orderDate}</p>\n                  <p className=\"smaller-text lighter-text payment-due client-details\">\n                    Payment Due\n                  </p>\n                  <p className=\"bigger-text darker-text\">\n                    {invoiceState.selectedInvoice.payment_date}\n                  </p>\n                </div>\n                <div className=\"client-name-address-container\">\n                  <p className=\"smaller-text lighter-text client-details\">\n                    Bill To\n                  </p>\n                  <p className=\"bigger-text darker-text\">\n                    {invoiceState.selectedInvoice.client_name}\n                  </p>\n                  <p className=\"lighter-text smaller-text address-pad address \">\n                    {invoiceState.selectedInvoice.client_street_address}\n                  </p>\n                  <p className=\"lighter-text smaller-text address\">\n                    {`${invoiceState.selectedInvoice.client_city} ${invoiceState.selectedInvoice.client_state} ${invoiceState.selectedInvoice.client_zip} ${invoiceState.selectedInvoice.client_country}`}\n                  </p>\n                </div>\n              </div>\n              <div className=\"sent-to-container\">\n                <p className=\"lighter-text smaller-text\">Sent to</p>\n                <p className=\"bigger-text darker-text\">\n                  {invoiceState.selectedInvoice.client_email}\n                </p>\n              </div>\n            </div>\n            <LineItemDetails subtotal={invoiceState.selectedInvoice.subtotal} />\n          </Card>\n          <div className=\"margin-div\"></div>\n          <InvoiceFooter>\n            <LoginButton\n              onClick={editHandler}\n              classes={\"invoice-footer-btn discard\"}\n            >\n              Edit\n            </LoginButton>\n            <LoginButton\n              onClick={deleteHandler}\n              classes={\"invoice-footer-btn draft delete\"}\n            >\n              Delete\n            </LoginButton>\n            <LoginButton\n              onClick={markAsPaidHandler}\n              classes={\"active invoice-footer-btn mark-as-paid\"}\n            >\n              Mark as Paid\n            </LoginButton>\n          </InvoiceFooter>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Invoice;\n","//Fetches the user information out of session storage to keep user logged in on refresh with global state.\nfunction persistUserLogin() {\n  const userInfo = JSON.parse(sessionStorage.getItem(\"userData\"));\n  return userInfo;\n}\n\nexport default persistUserLogin;\n","import React, { useContext, useEffect } from \"react\";\nimport { userContext } from \"./store/userStore\";\nimport {\n  Navigate,\n  Routes,\n  Route,\n  useNavigate,\n  useLocation,\n} from \"react-router-dom\";\nimport Login from \"./pages/Login\";\nimport Profile from \"./pages/Profile\";\nimport Invoice from \"./pages/Invoice\";\nimport persistUserLogin from \"./helpers/getDataFromSession\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const { state, dispatch } = useContext(userContext);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!state.user) {\n      const userInfo = persistUserLogin();\n      dispatch({ type: \"USER_LOGGED_IN\", value: userInfo });\n      // if there is no user already stored in state, navigate them to the current pathname of the page they're on\n      navigate(`${location.pathname}`);\n    }\n  }, []);\n\n  // Routes are protected if user is not signed in and authenticated\n  if (!state.user) {\n    return (\n      <React.Fragment>\n        <Routes>\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"*\" element={<Navigate to=\"/login\" />} />\n        </Routes>\n      </React.Fragment>\n    );\n  }\n  return (\n    <React.Fragment>\n      <Routes>\n        {/* list specific path routes here */}\n        <Route path=\"/profile\" element={<Profile />} />\n        <Route path=\"/invoice/:id\" element={<Invoice />} />\n        <Route path=\"/login\" element={<Login />} />\n\n        {/* catch all route (default to /profile if none of the above paths match) */}\n        <Route path=\"*\" element={<Navigate to=\"/profile\" />} />\n      </Routes>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { UserStore } from \"./store/userStore\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { InvoiceStore } from \"./store/invoiceStore\";\nimport { LineItemStore } from \"./store/lineItemStore\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserStore>\n      <InvoiceStore>\n        <LineItemStore>\n          <BrowserRouter>\n            <App />\n          </BrowserRouter>\n        </LineItemStore>\n      </InvoiceStore>\n    </UserStore>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}